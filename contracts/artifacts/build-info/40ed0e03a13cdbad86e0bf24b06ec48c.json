{
	"id": "40ed0e03a13cdbad86e0bf24b06ec48c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\ncontract MyToken is ERC20, Ownable, Pausable {\r\n    uint256 public constant maxSupply = 2000000000 * 10**18;\r\n    string public constant NAME = \"MEME\";\r\n    string public constant SYMBOL = \"MEME\";\r\n\r\n    mapping(address => bool) public isBlacklisted;\r\n\r\n    constructor() ERC20(NAME, SYMBOL) Ownable() {\r\n        _mint(msg.sender, 1000000000 * 10**18); // Mint initial supply to the owner\r\n    }\r\n\r\n    // Burnable\r\n    function burn(uint256 amount) public {\r\n        _burn(_msgSender(), amount);\r\n    }\r\n\r\n    // Mintable (only for the owner)\r\n    function mint(address account, uint256 amount) public onlyOwner {\r\n        unchecked {\r\n            require(totalSupply() + amount <= maxSupply, \"Minting would exceed max supply\");\r\n        }\r\n        _mint(account, amount);\r\n    }\r\n\r\n    // Pausable (temporarily halt transfers)\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    // Blacklist functionality (prevent certain addresses from interacting)\r\n    function blacklist(address account) public onlyOwner {\r\n        if (!isBlacklisted[account]) {\r\n            isBlacklisted[account] = true;\r\n        }\r\n    }\r\n\r\n    function removeBlacklist(address account) public onlyOwner {\r\n        if (isBlacklisted[account]) {\r\n            isBlacklisted[account] = false;\r\n        }\r\n    }\r\n\r\n    // Batch blacklisting for gas efficiency\r\n    function blacklistBatch(address[] calldata accounts) public onlyOwner {\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            if (!isBlacklisted[accounts[i]]) {\r\n                isBlacklisted[accounts[i]] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function removeBlacklistBatch(address[] calldata accounts) public onlyOwner {\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            if (isBlacklisted[accounts[i]]) {\r\n                isBlacklisted[accounts[i]] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Override transfer and transferFrom to check blacklist and pause\r\n    function transfer(address to, uint256 amount)\r\n        public\r\n        override\r\n        notBlacklisted(msg.sender)\r\n        notBlacklisted(to)\r\n        whenNotPaused\r\n        returns (bool)\r\n    {\r\n        return super.transfer(to, amount);\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 amount)\r\n        public\r\n        override\r\n        notBlacklisted(from)\r\n        notBlacklisted(to)\r\n        whenNotPaused\r\n        returns (bool)\r\n    {\r\n        return super.transferFrom(from, to, amount);\r\n    }\r\n\r\n    modifier notBlacklisted(address account) {\r\n        require(!isBlacklisted[account], \"Address is blacklisted\");\r\n        _;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 267,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 386,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 388,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 390,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 392,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC20.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "NAME",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SYMBOL",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"name": "blacklistBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlacklisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"name": "removeBlacklistBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC20.sol\":230:2946  contract MyToken is ERC20, Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC20.sol\":488:625  constructor() ERC20(NAME, SYMBOL) Ownable() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/ERC20.sol\":508:512  NAME */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x4d454d45)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n    /* \"contracts/ERC20.sol\":514:520  SYMBOL */\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n    /* \"contracts/ERC20.sol\":508:512  NAME */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_7\n    /* \"contracts/ERC20.sol\":508:512  NAME */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/ERC20.sol\":543:581  _mint(msg.sender, 1000000000 * 10**18) */\n  tag_17\n    /* \"contracts/ERC20.sol\":549:559  msg.sender */\n  caller\n    /* \"contracts/ERC20.sol\":561:580  1000000000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"contracts/ERC20.sol\":543:548  _mint */\n  tag_18\n    /* \"contracts/ERC20.sol\":543:581  _mint(msg.sender, 1000000000 * 10**18) */\n  jump\t// in\ntag_17:\n    /* \"contracts/ERC20.sol\":230:2946  contract MyToken is ERC20, Ownable, Pausable {... */\n  jump(tag_45)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2801:2852   */\n  mstore\n    /* \"#utility.yul\":2774:2792   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_26\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_32\n  swap1\n  pop\n  jump\ntag_29:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3310:3342   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3292:3343   */\n  mstore\n    /* \"#utility.yul\":3359:3377   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3352:3386   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3402:3420   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3395:3429   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3265:3283   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_24\n    /* \"#utility.yul\":3090:3435   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_37)\ntag_36:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_38\n  swap2\n    /* \"#utility.yul\":3586:3611   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3574:3576   */\n  0x20\n    /* \"#utility.yul\":3559:3577   */\n  add\n  swap1\n    /* \"#utility.yul\":3440:3617   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_40:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_41:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_48:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_49:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_43:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_53:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_54:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_54)\ntag_56:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_52:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2650   */\ntag_8:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_60\n  tag_40\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1555:1652   */\n  tag_61\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_62\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_41\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_43\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1701:1705   */\n  0x20\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1721:1735   */\n  dup3\n  gt\n    /* \"#utility.yul\":1749:1750   */\n  0x01\n    /* \"#utility.yul\":1744:2393   */\n  dup2\n  eq\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2437:2438   */\n  0x00\n    /* \"#utility.yul\":2454:2460   */\n  dup4\n    /* \"#utility.yul\":2451:2540   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":2506:2525   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":2500:2526   */\n  mload\n    /* \"#utility.yul\":2451:2540   */\ntag_65:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2553:2634   */\n  dup5\n  sstore\n    /* \"#utility.yul\":1714:2644   */\n  jump(tag_56)\n    /* \"#utility.yul\":1744:2393   */\ntag_64:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1780:1800   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":1898:2120   */\ntag_68:\n    /* \"#utility.yul\":1912:1919   */\n  dup3\n    /* \"#utility.yul\":1909:1910   */\n  dup2\n    /* \"#utility.yul\":1906:1920   */\n  lt\n    /* \"#utility.yul\":1898:2120   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1994:2013   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":1988:2014   */\n  mload\n    /* \"#utility.yul\":1973:2015   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2101:2105   */\n  0x20\n    /* \"#utility.yul\":2086:2106   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2054:2055   */\n  0x01\n    /* \"#utility.yul\":2042:2056   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":1928:1940   */\n  add\n    /* \"#utility.yul\":1898:2120   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":1902:1905   */\n  pop\n    /* \"#utility.yul\":2148:2154   */\n  dup5\n    /* \"#utility.yul\":2139:2146   */\n  dup3\n    /* \"#utility.yul\":2136:2155   */\n  lt\n    /* \"#utility.yul\":2133:2334   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":2209:2228   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":2203:2229   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2292:2293   */\n  0x03\n    /* \"#utility.yul\":2288:2302   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":2304:2307   */\n  0xf8\n    /* \"#utility.yul\":2284:2308   */\n  and\n    /* \"#utility.yul\":2280:2317   */\n  shr\n    /* \"#utility.yul\":2276:2318   */\n  not\n    /* \"#utility.yul\":2261:2319   */\n  and\n    /* \"#utility.yul\":2246:2320   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2133:2334   */\ntag_71:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2380:2381   */\n  0x01\n    /* \"#utility.yul\":2364:2378   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2360:2382   */\n  add\n    /* \"#utility.yul\":2347:2383   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1351:2650   */\n  jump\t// out\n    /* \"#utility.yul\":2863:3085   */\ntag_31:\n    /* \"#utility.yul\":2928:2937   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":2949:2959   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":2946:3079   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3001:3011   */\n  0x4e487b71\n    /* \"#utility.yul\":2996:2999   */\n  0xe0\n    /* \"#utility.yul\":2992:3012   */\n  shl\n    /* \"#utility.yul\":2989:2990   */\n  0x00\n    /* \"#utility.yul\":2982:3013   */\n  mstore\n    /* \"#utility.yul\":3036:3040   */\n  0x11\n    /* \"#utility.yul\":3033:3034   */\n  0x04\n    /* \"#utility.yul\":3026:3041   */\n  mstore\n    /* \"#utility.yul\":3064:3068   */\n  0x24\n    /* \"#utility.yul\":3061:3062   */\n  0x00\n    /* \"#utility.yul\":3054:3069   */\n  revert\n    /* \"#utility.yul\":2946:3079   */\ntag_74:\n    /* \"#utility.yul\":2863:3085   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3440:3617   */\ntag_45:\n    /* \"contracts/ERC20.sol\":230:2946  contract MyToken is ERC20, Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC20.sol\":230:2946  contract MyToken is ERC20, Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf76f8d78\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfe575a87\n      eq\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xeb91e651\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xef2af922\n      eq\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      dup1\n      0x8456cb59\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa3f4df7e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      dup1\n      0x40c10f19\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x726b5771\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_34\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_42:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_34\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/ERC20.sol\":2535:2805  function transferFrom(address from, address to, uint256 amount)... */\n    tag_6:\n      tag_36\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_34\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"contracts/ERC20.sol\":1133:1198  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/ERC20.sol\":779:1010  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_55\n      tag_58\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/ERC20.sol\":650:733  function burn(uint256 amount) public {... */\n    tag_10:\n      tag_55\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_36)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_42\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_55\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1663:1924  function blacklistBatch(address[] calldata accounts) public onlyOwner {... */\n    tag_14:\n      tag_55\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1064:1125  function pause() public onlyOwner {... */\n    tag_15:\n      tag_55\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3045:3096   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3033:3035   */\n      0x20\n        /* \"#utility.yul\":3018:3036   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_34\n        /* \"#utility.yul\":2899:3102   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_32\n      tag_85\n      jump\t// in\n        /* \"contracts/ERC20.sol\":344:380  string public constant NAME = \"MEME\" */\n    tag_18:\n      tag_32\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe0, 0x4d454d45)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"contracts/ERC20.sol\":2279:2527  function transfer(address to, uint256 amount)... */\n    tag_19:\n      tag_36\n      tag_91\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n        /* \"contracts/ERC20.sol\":282:337  uint256 public constant maxSupply = 2000000000 * 10**18 */\n    tag_20:\n      tag_42\n        /* \"contracts/ERC20.sol\":318:337  2000000000 * 10**18 */\n      0x06765c793fa10079d0000000\n        /* \"contracts/ERC20.sol\":282:337  uint256 public constant maxSupply = 2000000000 * 10**18 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_42\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20.sol\":1447:1609  function removeBlacklist(address account) public onlyOwner {... */\n    tag_22:\n      tag_55\n      tag_103\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1932:2199  function removeBlacklistBatch(address[] calldata accounts) public onlyOwner {... */\n    tag_23:\n      tag_55\n      tag_106\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_55\n      tag_109\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1283:1439  function blacklist(address account) public onlyOwner {... */\n    tag_26:\n      tag_55\n      tag_115\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"contracts/ERC20.sol\":434:479  mapping(address => bool) public isBlacklisted */\n    tag_27:\n      tag_36\n      tag_118\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_118:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_123\n      jump\t// in\n    tag_124:\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_128:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":2535:2805  function transferFrom(address from, address to, uint256 amount)... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      dup4\n      and\n        /* \"contracts/ERC20.sol\":2732:2736  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":2874:2887  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2657:2661  from */\n      dup5\n      swap1\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":2873:2896  !isBlacklisted[account] */\n      iszero\n        /* \"contracts/ERC20.sol\":2865:2923  require(!isBlacklisted[account], \"Address is blacklisted\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":2874:2887  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2687:2689  to */\n      dup5\n      swap1\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":2873:2896  !isBlacklisted[account] */\n      iszero\n        /* \"contracts/ERC20.sol\":2865:2923  require(!isBlacklisted[account], \"Address is blacklisted\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_142\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_143\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ERC20.sol\":2761:2797  super.transferFrom(from, to, amount) */\n      tag_145\n        /* \"contracts/ERC20.sol\":2780:2784  from */\n      dup7\n        /* \"contracts/ERC20.sol\":2786:2788  to */\n      dup7\n        /* \"contracts/ERC20.sol\":2790:2796  amount */\n      dup7\n        /* \"contracts/ERC20.sol\":2761:2779  super.transferFrom */\n      tag_146\n        /* \"contracts/ERC20.sol\":2761:2797  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/ERC20.sol\":2754:2797  return super.transferFrom(from, to, amount) */\n      swap7\n        /* \"contracts/ERC20.sol\":2535:2805  function transferFrom(address from, address to, uint256 amount)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1133:1198  function unpause() public onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/ERC20.sol\":1180:1190  _unpause() */\n      tag_152\n        /* \"contracts/ERC20.sol\":1180:1188  _unpause */\n      tag_153\n        /* \"contracts/ERC20.sol\":1180:1190  _unpause() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/ERC20.sol\":1133:1198  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC20.sol\":779:1010  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/ERC20.sol\":318:337  2000000000 * 10**18 */\n      0x06765c793fa10079d0000000\n        /* \"contracts/ERC20.sol\":903:909  amount */\n      dup2\n        /* \"contracts/ERC20.sol\":887:900  totalSupply() */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/ERC20.sol\":887:900  totalSupply() */\n    tag_157:\n        /* \"contracts/ERC20.sol\":887:909  totalSupply() + amount */\n      add\n        /* \"contracts/ERC20.sol\":887:922  totalSupply() + amount <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/ERC20.sol\":879:958  require(totalSupply() + amount <= maxSupply, \"Minting would exceed max supply\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4310:4312   */\n      0x20\n        /* \"contracts/ERC20.sol\":879:958  require(totalSupply() + amount <= maxSupply, \"Minting would exceed max supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4292:4313   */\n      mstore\n        /* \"#utility.yul\":4349:4351   */\n      0x1f\n        /* \"#utility.yul\":4329:4347   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4322:4352   */\n      mstore\n        /* \"#utility.yul\":4388:4421   */\n      0x4d696e74696e6720776f756c6420657863656564206d617820737570706c7900\n        /* \"#utility.yul\":4368:4386   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4361:4422   */\n      mstore\n        /* \"#utility.yul\":4439:4457   */\n      0x64\n      add\n        /* \"contracts/ERC20.sol\":879:958  require(totalSupply() + amount <= maxSupply, \"Minting would exceed max supply\") */\n      tag_136\n        /* \"#utility.yul\":4108:4463   */\n      jump\n        /* \"contracts/ERC20.sol\":879:958  require(totalSupply() + amount <= maxSupply, \"Minting would exceed max supply\") */\n    tag_158:\n        /* \"contracts/ERC20.sol\":980:1002  _mint(account, amount) */\n      tag_161\n        /* \"contracts/ERC20.sol\":986:993  account */\n      dup3\n        /* \"contracts/ERC20.sol\":995:1001  amount */\n      dup3\n        /* \"contracts/ERC20.sol\":980:985  _mint */\n      tag_162\n        /* \"contracts/ERC20.sol\":980:1002  _mint(account, amount) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/ERC20.sol\":779:1010  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":650:733  function burn(uint256 amount) public {... */\n    tag_63:\n        /* \"contracts/ERC20.sol\":698:725  _burn(_msgSender(), amount) */\n      tag_164\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":718:724  amount */\n      dup3\n        /* \"contracts/ERC20.sol\":698:703  _burn */\n      tag_166\n        /* \"contracts/ERC20.sol\":698:725  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/ERC20.sol\":650:733  function burn(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1663:1924  function blacklistBatch(address[] calldata accounts) public onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/ERC20.sol\":1749:1758  uint256 i */\n      0x00\n        /* \"contracts/ERC20.sol\":1744:1917  for (uint256 i = 0; i < accounts.length; i++) {... */\n    tag_177:\n        /* \"contracts/ERC20.sol\":1764:1783  i < accounts.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/ERC20.sol\":1744:1917  for (uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/ERC20.sol\":1810:1823  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":1810:1836  isBlacklisted[accounts[i]] */\n      0x00\n        /* \"contracts/ERC20.sol\":1824:1832  accounts */\n      dup5\n      dup5\n        /* \"contracts/ERC20.sol\":1833:1834  i */\n      dup5\n        /* \"contracts/ERC20.sol\":1824:1835  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":1810:1836  isBlacklisted[accounts[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":1805:1906  if (!isBlacklisted[accounts[i]]) {... */\n      tag_184\n      jumpi\n        /* \"contracts/ERC20.sol\":1886:1890  true */\n      0x01\n        /* \"contracts/ERC20.sol\":1857:1870  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":1857:1883  isBlacklisted[accounts[i]] */\n      0x00\n        /* \"contracts/ERC20.sol\":1871:1879  accounts */\n      dup6\n      dup6\n        /* \"contracts/ERC20.sol\":1880:1881  i */\n      dup6\n        /* \"contracts/ERC20.sol\":1871:1882  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_186\n      tag_182\n      jump\t// in\n    tag_186:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":1857:1883  isBlacklisted[accounts[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":1857:1890  isBlacklisted[accounts[i]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":1805:1906  if (!isBlacklisted[accounts[i]]) {... */\n    tag_184:\n        /* \"contracts/ERC20.sol\":1785:1788  i++ */\n      0x01\n      add\n        /* \"contracts/ERC20.sol\":1744:1917  for (uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_177)\n    tag_178:\n      pop\n        /* \"contracts/ERC20.sol\":1663:1924  function blacklistBatch(address[] calldata accounts) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1064:1125  function pause() public onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"contracts/ERC20.sol\":1109:1117  _pause() */\n      tag_152\n        /* \"contracts/ERC20.sol\":1109:1115  _pause */\n      tag_192\n        /* \"contracts/ERC20.sol\":1109:1117  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n        /* \"contracts/ERC20.sol\":2279:2527  function transfer(address to, uint256 amount)... */\n    tag_92:\n        /* \"contracts/ERC20.sol\":2383:2393  msg.sender */\n      caller\n        /* \"contracts/ERC20.sol\":2464:2468  bool */\n      0x00\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":2874:2887  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2464:2468  bool */\n      swap1\n      swap2\n        /* \"contracts/ERC20.sol\":2383:2393  msg.sender */\n      swap1\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":2873:2896  !isBlacklisted[account] */\n      iszero\n        /* \"contracts/ERC20.sol\":2865:2923  require(!isBlacklisted[account], \"Address is blacklisted\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":2874:2887  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC20.sol\":2419:2421  to */\n      dup5\n      swap1\n        /* \"contracts/ERC20.sol\":2874:2896  isBlacklisted[account] */\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":2873:2896  !isBlacklisted[account] */\n      iszero\n        /* \"contracts/ERC20.sol\":2865:2923  require(!isBlacklisted[account], \"Address is blacklisted\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_207\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_143\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/ERC20.sol\":2493:2519  super.transfer(to, amount) */\n      tag_209\n        /* \"contracts/ERC20.sol\":2508:2510  to */\n      dup6\n        /* \"contracts/ERC20.sol\":2512:2518  amount */\n      dup6\n        /* \"contracts/ERC20.sol\":2493:2507  super.transfer */\n      tag_210\n        /* \"contracts/ERC20.sol\":2493:2519  super.transfer(to, amount) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/ERC20.sol\":2486:2519  return super.transfer(to, amount) */\n      swap6\n        /* \"contracts/ERC20.sol\":2279:2527  function transfer(address to, uint256 amount)... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1447:1609  function removeBlacklist(address account) public onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":1521:1543  isBlacklisted[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":1521:1534  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":1521:1543  isBlacklisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":1517:1602  if (isBlacklisted[account]) {... */\n      iszero\n      tag_164\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":1560:1582  isBlacklisted[account] */\n      and\n        /* \"contracts/ERC20.sol\":1585:1590  false */\n      0x00\n        /* \"contracts/ERC20.sol\":1560:1582  isBlacklisted[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":1560:1573  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":1560:1582  isBlacklisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC20.sol\":1560:1590  isBlacklisted[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":1447:1609  function removeBlacklist(address account) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC20.sol\":1932:2199  function removeBlacklistBatch(address[] calldata accounts) public onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/ERC20.sol\":2024:2033  uint256 i */\n      0x00\n        /* \"contracts/ERC20.sol\":2019:2192  for (uint256 i = 0; i < accounts.length; i++) {... */\n    tag_219:\n        /* \"contracts/ERC20.sol\":2039:2058  i < accounts.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/ERC20.sol\":2019:2192  for (uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/ERC20.sol\":2084:2097  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":2084:2110  isBlacklisted[accounts[i]] */\n      0x00\n        /* \"contracts/ERC20.sol\":2098:2106  accounts */\n      dup5\n      dup5\n        /* \"contracts/ERC20.sol\":2107:2108  i */\n      dup5\n        /* \"contracts/ERC20.sol\":2098:2109  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_223\n      tag_182\n      jump\t// in\n    tag_223:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_224:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":2084:2110  isBlacklisted[accounts[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":2080:2181  if (isBlacklisted[accounts[i]]) {... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/ERC20.sol\":2160:2165  false */\n      0x00\n        /* \"contracts/ERC20.sol\":2131:2144  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":2131:2157  isBlacklisted[accounts[i]] */\n      0x00\n        /* \"contracts/ERC20.sol\":2145:2153  accounts */\n      dup6\n      dup6\n        /* \"contracts/ERC20.sol\":2154:2155  i */\n      dup6\n        /* \"contracts/ERC20.sol\":2145:2156  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_227\n      tag_182\n      jump\t// in\n    tag_227:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":2131:2157  isBlacklisted[accounts[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC20.sol\":2131:2165  isBlacklisted[accounts[i]] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":2080:2181  if (isBlacklisted[accounts[i]]) {... */\n    tag_225:\n        /* \"contracts/ERC20.sol\":2060:2063  i++ */\n      0x01\n      add\n        /* \"contracts/ERC20.sol\":2019:2192  for (uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_219)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4802:4804   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4784:4805   */\n      mstore\n        /* \"#utility.yul\":4841:4843   */\n      0x26\n        /* \"#utility.yul\":4821:4839   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4814:4844   */\n      mstore\n        /* \"#utility.yul\":4880:4914   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4860:4878   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4853:4915   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4931:4949   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4924:4960   */\n      mstore\n        /* \"#utility.yul\":4977:4996   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_136\n        /* \"#utility.yul\":4600:5002   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/ERC20.sol\":1283:1439  function blacklist(address account) public onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":1352:1374  isBlacklisted[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":1352:1365  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":1352:1374  isBlacklisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/ERC20.sol\":1347:1432  if (!isBlacklisted[account]) {... */\n      tag_164\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC20.sol\":1391:1413  isBlacklisted[account] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC20.sol\":1391:1404  isBlacklisted */\n      0x06\n        /* \"contracts/ERC20.sol\":1391:1413  isBlacklisted[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC20.sol\":1391:1420  isBlacklisted[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/ERC20.sol\":1416:1420  true */\n      0x01\n        /* \"contracts/ERC20.sol\":1391:1420  isBlacklisted[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC20.sol\":1283:1439  function blacklist(address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5209:5211   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5191:5212   */\n      mstore\n        /* \"#utility.yul\":5248:5250   */\n      0x10\n        /* \"#utility.yul\":5228:5246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5221:5251   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5267:5285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5260:5306   */\n      mstore\n        /* \"#utility.yul\":5323:5341   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_136\n        /* \"#utility.yul\":5007:5347   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_253:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5554:5556   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5536:5557   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5573:5591   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5566:5596   */\n      mstore\n        /* \"#utility.yul\":5632:5666   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5612:5630   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5605:5667   */\n      mstore\n        /* \"#utility.yul\":5684:5702   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_136\n        /* \"#utility.yul\":5352:5708   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_262\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_263\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_265:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3063:3095   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3045:3096   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3033:3035   */\n      0x20\n        /* \"#utility.yul\":3018:3036   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3045:3096   */\n      mstore\n        /* \"#utility.yul\":3018:3036   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2899:3102   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3045:3096   */\n      mstore\n        /* \"#utility.yul\":3018:3036   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2899:3102   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_278\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_143\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3045:3096   */\n      mstore\n        /* \"#utility.yul\":3018:3036   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2899:3102   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_286:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3045:3096   */\n      mstore\n        /* \"#utility.yul\":3018:3036   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2899:3102   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_288:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_291\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5933:5965   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5915:5966   */\n      mstore\n        /* \"#utility.yul\":5982:6000   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5975:6009   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6025:6043   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6018:6052   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5888:5906   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_136\n        /* \"#utility.yul\":5713:6058   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_290\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3045:3096   */\n      mstore\n        /* \"#utility.yul\":3018:3036   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2899:3102   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_302\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3045:3096   */\n      mstore\n        /* \"#utility.yul\":3018:3036   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_136\n        /* \"#utility.yul\":2899:3102   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6265:6267   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6247:6268   */\n      mstore\n        /* \"#utility.yul\":6304:6306   */\n      0x14\n        /* \"#utility.yul\":6284:6302   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6277:6307   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":6323:6341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6316:6366   */\n      mstore\n        /* \"#utility.yul\":6383:6401   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_136\n        /* \"#utility.yul\":6063:6407   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_312\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_314\n      swap1\n      pop\n      jump\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5933:5965   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5915:5966   */\n      mstore\n        /* \"#utility.yul\":5982:6000   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5975:6009   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6025:6043   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6018:6052   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5888:5906   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_136\n        /* \"#utility.yul\":5713:6058   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_318)\n    tag_317:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_319\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:432   */\n    tag_35:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_320:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_324:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_38:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_326:\n        /* \"#utility.yul\":783:812   */\n      tag_327\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_320\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_48:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_331:\n        /* \"#utility.yul\":1479:1508   */\n      tag_332\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_320\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_333\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_320\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2088   */\n    tag_62:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_336:\n      pop\n        /* \"#utility.yul\":2035:2058   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1862:2088   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2093:2279   */\n    tag_69:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2205:2207   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2184:2191   */\n      dup5\n        /* \"#utility.yul\":2180:2203   */\n      sub\n        /* \"#utility.yul\":2176:2208   */\n      slt\n        /* \"#utility.yul\":2173:2225   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":2221:2222   */\n      0x00\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2211:2223   */\n      revert\n        /* \"#utility.yul\":2173:2225   */\n    tag_338:\n        /* \"#utility.yul\":2244:2273   */\n      tag_339\n        /* \"#utility.yul\":2263:2272   */\n      dup3\n        /* \"#utility.yul\":2244:2273   */\n      tag_320\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2234:2273   */\n      swap4\n        /* \"#utility.yul\":2093:2279   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2284:2894   */\n    tag_76:\n        /* \"#utility.yul\":2370:2376   */\n      0x00\n        /* \"#utility.yul\":2378:2384   */\n      0x00\n        /* \"#utility.yul\":2431:2433   */\n      0x20\n        /* \"#utility.yul\":2419:2428   */\n      dup4\n        /* \"#utility.yul\":2410:2417   */\n      dup6\n        /* \"#utility.yul\":2406:2429   */\n      sub\n        /* \"#utility.yul\":2402:2434   */\n      slt\n        /* \"#utility.yul\":2399:2451   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2447:2448   */\n      0x00\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2437:2449   */\n      revert\n        /* \"#utility.yul\":2399:2451   */\n    tag_341:\n        /* \"#utility.yul\":2487:2496   */\n      dup3\n        /* \"#utility.yul\":2474:2497   */\n      calldataload\n        /* \"#utility.yul\":2520:2538   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2512:2518   */\n      dup2\n        /* \"#utility.yul\":2509:2539   */\n      gt\n        /* \"#utility.yul\":2506:2556   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2552:2553   */\n      0x00\n        /* \"#utility.yul\":2549:2550   */\n      0x00\n        /* \"#utility.yul\":2542:2554   */\n      revert\n        /* \"#utility.yul\":2506:2556   */\n    tag_342:\n        /* \"#utility.yul\":2575:2597   */\n      dup4\n      add\n        /* \"#utility.yul\":2628:2632   */\n      0x1f\n        /* \"#utility.yul\":2620:2633   */\n      dup2\n      add\n        /* \"#utility.yul\":2616:2643   */\n      dup6\n      sgt\n        /* \"#utility.yul\":2606:2661   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2657:2658   */\n      0x00\n        /* \"#utility.yul\":2654:2655   */\n      0x00\n        /* \"#utility.yul\":2647:2659   */\n      revert\n        /* \"#utility.yul\":2606:2661   */\n    tag_343:\n        /* \"#utility.yul\":2697:2699   */\n      dup1\n        /* \"#utility.yul\":2684:2700   */\n      calldataload\n        /* \"#utility.yul\":2723:2741   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2715:2721   */\n      dup2\n        /* \"#utility.yul\":2712:2742   */\n      gt\n        /* \"#utility.yul\":2709:2759   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2755:2756   */\n      0x00\n        /* \"#utility.yul\":2752:2753   */\n      0x00\n        /* \"#utility.yul\":2745:2757   */\n      revert\n        /* \"#utility.yul\":2709:2759   */\n    tag_344:\n        /* \"#utility.yul\":2808:2815   */\n      dup6\n        /* \"#utility.yul\":2803:2805   */\n      0x20\n        /* \"#utility.yul\":2793:2799   */\n      dup3\n        /* \"#utility.yul\":2790:2791   */\n      0x05\n        /* \"#utility.yul\":2786:2800   */\n      shl\n        /* \"#utility.yul\":2782:2784   */\n      dup5\n        /* \"#utility.yul\":2778:2801   */\n      add\n        /* \"#utility.yul\":2774:2806   */\n      add\n        /* \"#utility.yul\":2771:2816   */\n      gt\n        /* \"#utility.yul\":2768:2833   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2826:2827   */\n      0x00\n        /* \"#utility.yul\":2819:2831   */\n      revert\n        /* \"#utility.yul\":2768:2833   */\n    tag_345:\n        /* \"#utility.yul\":2860:2862   */\n      0x20\n        /* \"#utility.yul\":2852:2863   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":2882:2888   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":2284:2894   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3107:3367   */\n    tag_99:\n        /* \"#utility.yul\":3175:3181   */\n      0x00\n        /* \"#utility.yul\":3183:3189   */\n      0x00\n        /* \"#utility.yul\":3236:3238   */\n      0x40\n        /* \"#utility.yul\":3224:3233   */\n      dup4\n        /* \"#utility.yul\":3215:3222   */\n      dup6\n        /* \"#utility.yul\":3211:3234   */\n      sub\n        /* \"#utility.yul\":3207:3239   */\n      slt\n        /* \"#utility.yul\":3204:3256   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":3252:3253   */\n      0x00\n        /* \"#utility.yul\":3249:3250   */\n      0x00\n        /* \"#utility.yul\":3242:3254   */\n      revert\n        /* \"#utility.yul\":3204:3256   */\n    tag_348:\n        /* \"#utility.yul\":3275:3304   */\n      tag_349\n        /* \"#utility.yul\":3294:3303   */\n      dup4\n        /* \"#utility.yul\":3275:3304   */\n      tag_320\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3265:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3323:3361   */\n      tag_350\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup5\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3323:3361   */\n      tag_320\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3313:3361   */\n      swap1\n      pop\n        /* \"#utility.yul\":3107:3367   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3372:3752   */\n    tag_123:\n        /* \"#utility.yul\":3451:3452   */\n      0x01\n        /* \"#utility.yul\":3447:3459   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3494:3506   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3515:3576   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":3569:3573   */\n      0x7f\n        /* \"#utility.yul\":3561:3567   */\n      dup3\n        /* \"#utility.yul\":3557:3574   */\n      and\n        /* \"#utility.yul\":3547:3574   */\n      swap2\n      pop\n        /* \"#utility.yul\":3515:3576   */\n    tag_352:\n        /* \"#utility.yul\":3622:3624   */\n      0x20\n        /* \"#utility.yul\":3614:3620   */\n      dup3\n        /* \"#utility.yul\":3611:3625   */\n      lt\n        /* \"#utility.yul\":3591:3609   */\n      dup2\n        /* \"#utility.yul\":3588:3626   */\n      sub\n        /* \"#utility.yul\":3585:3746   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":3668:3678   */\n      0x4e487b71\n        /* \"#utility.yul\":3663:3666   */\n      0xe0\n        /* \"#utility.yul\":3659:3679   */\n      shl\n        /* \"#utility.yul\":3656:3657   */\n      0x00\n        /* \"#utility.yul\":3649:3680   */\n      mstore\n        /* \"#utility.yul\":3703:3707   */\n      0x22\n        /* \"#utility.yul\":3700:3701   */\n      0x04\n        /* \"#utility.yul\":3693:3708   */\n      mstore\n        /* \"#utility.yul\":3731:3735   */\n      0x24\n        /* \"#utility.yul\":3728:3729   */\n      0x00\n        /* \"#utility.yul\":3721:3736   */\n      revert\n        /* \"#utility.yul\":3585:3746   */\n    tag_353:\n      pop\n        /* \"#utility.yul\":3372:3752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3757:4103   */\n    tag_137:\n        /* \"#utility.yul\":3959:3961   */\n      0x20\n        /* \"#utility.yul\":3941:3962   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3998:4000   */\n      0x16\n        /* \"#utility.yul\":3978:3996   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3971:4001   */\n      mstore\n      shl(0x52, 0x1059191c995cdcc81a5cc8189b1858dadb1a5cdd1959)\n        /* \"#utility.yul\":4032:4034   */\n      0x40\n        /* \"#utility.yul\":4017:4035   */\n      dup3\n      add\n        /* \"#utility.yul\":4010:4062   */\n      mstore\n        /* \"#utility.yul\":4094:4096   */\n      0x60\n        /* \"#utility.yul\":4079:4097   */\n      add\n      swap1\n        /* \"#utility.yul\":3757:4103   */\n      jump\t// out\n        /* \"#utility.yul\":4468:4595   */\n    tag_182:\n        /* \"#utility.yul\":4529:4539   */\n      0x4e487b71\n        /* \"#utility.yul\":4524:4527   */\n      0xe0\n        /* \"#utility.yul\":4520:4540   */\n      shl\n        /* \"#utility.yul\":4517:4518   */\n      0x00\n        /* \"#utility.yul\":4510:4541   */\n      mstore\n        /* \"#utility.yul\":4560:4564   */\n      0x32\n        /* \"#utility.yul\":4557:4558   */\n      0x04\n        /* \"#utility.yul\":4550:4565   */\n      mstore\n        /* \"#utility.yul\":4584:4588   */\n      0x24\n        /* \"#utility.yul\":4581:4582   */\n      0x00\n        /* \"#utility.yul\":4574:4589   */\n      revert\n        /* \"#utility.yul\":6412:6634   */\n    tag_313:\n        /* \"#utility.yul\":6477:6486   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6498:6508   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6495:6628   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":6550:6560   */\n      0x4e487b71\n        /* \"#utility.yul\":6545:6548   */\n      0xe0\n        /* \"#utility.yul\":6541:6561   */\n      shl\n        /* \"#utility.yul\":6538:6539   */\n      0x00\n        /* \"#utility.yul\":6531:6562   */\n      mstore\n        /* \"#utility.yul\":6585:6589   */\n      0x11\n        /* \"#utility.yul\":6582:6583   */\n      0x04\n        /* \"#utility.yul\":6575:6590   */\n      mstore\n        /* \"#utility.yul\":6613:6617   */\n      0x24\n        /* \"#utility.yul\":6610:6611   */\n      0x00\n        /* \"#utility.yul\":6603:6618   */\n      revert\n\n    auxdata: 0xa2646970667358221220e0f7044e567fc427a039a594facd60f5ea619a4d59a9efaeef072c22c15abd3764736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1046": {
									"entryPoint": null,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_276": {
									"entryPoint": null,
									"id": 276,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_409": {
									"entryPoint": null,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_712": {
									"entryPoint": 237,
									"id": 712,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_988": {
									"entryPoint": 152,
									"id": 988,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 156,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_679": {
									"entryPoint": 298,
									"id": 679,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3619:8",
										"nodeType": "YulBlock",
										"src": "0:3619:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:8",
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:8",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:8",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:8",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nativeSrc": "66:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nativeSrc": "56:31:8",
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nativeSrc": "56:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:8",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:8",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nativeSrc": "96:15:8",
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nativeSrc": "96:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:8",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:8",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nativeSrc": "120:15:8",
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nativeSrc": "120:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nativeSrc": "201:325:8",
													"nodeType": "YulBlock",
													"src": "201:325:8",
													"statements": [
														{
															"nativeSrc": "211:22:8",
															"nodeType": "YulAssignment",
															"src": "211:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:8",
																		"nodeType": "YulLiteral",
																		"src": "225:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:8"
																},
																"nativeSrc": "221:12:8",
																"nodeType": "YulFunctionCall",
																"src": "221:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																}
															]
														},
														{
															"nativeSrc": "242:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:8",
																		"nodeType": "YulLiteral",
																		"src": "278:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:8"
																},
																"nativeSrc": "268:12:8",
																"nodeType": "YulFunctionCall",
																"src": "268:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:8",
																	"nodeType": "YulTypedName",
																	"src": "246:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:8",
																"nodeType": "YulBlock",
																"src": "319:31:8",
																"statements": [
																	{
																		"nativeSrc": "321:27:8",
																		"nodeType": "YulAssignment",
																		"src": "321:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:8",
																					"nodeType": "YulLiteral",
																					"src": "343:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:8"
																			},
																			"nativeSrc": "331:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:8"
																},
																"nativeSrc": "292:26:8",
																"nodeType": "YulFunctionCall",
																"src": "292:26:8"
															},
															"nativeSrc": "289:61:8",
															"nodeType": "YulIf",
															"src": "289:61:8"
														},
														{
															"body": {
																"nativeSrc": "409:111:8",
																"nodeType": "YulBlock",
																"src": "409:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:8",
																					"nodeType": "YulLiteral",
																					"src": "430:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:8",
																							"nodeType": "YulLiteral",
																							"src": "437:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:8",
																							"nodeType": "YulLiteral",
																							"src": "442:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:8"
																					},
																					"nativeSrc": "433:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:8"
																			},
																			"nativeSrc": "423:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:8"
																		},
																		"nativeSrc": "423:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:8",
																					"nodeType": "YulLiteral",
																					"src": "474:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:8",
																					"nodeType": "YulLiteral",
																					"src": "477:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:8"
																			},
																			"nativeSrc": "467:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:8"
																		},
																		"nativeSrc": "467:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:8",
																					"nodeType": "YulLiteral",
																					"src": "502:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:8",
																					"nodeType": "YulLiteral",
																					"src": "505:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:8"
																			},
																			"nativeSrc": "495:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:8"
																		},
																		"nativeSrc": "495:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:8",
																				"nodeType": "YulLiteral",
																				"src": "396:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:8"
																		},
																		"nativeSrc": "385:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:8"
																},
																"nativeSrc": "362:38:8",
																"nodeType": "YulFunctionCall",
																"src": "362:38:8"
															},
															"nativeSrc": "359:161:8",
															"nodeType": "YulIf",
															"src": "359:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:8",
														"nodeType": "YulTypedName",
														"src": "181:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:8",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													}
												],
												"src": "146:380:8"
											},
											{
												"body": {
													"nativeSrc": "587:65:8",
													"nodeType": "YulBlock",
													"src": "587:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:8",
																		"nodeType": "YulLiteral",
																		"src": "604:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																},
																"nativeSrc": "597:14:8",
																"nodeType": "YulFunctionCall",
																"src": "597:14:8"
															},
															"nativeSrc": "597:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:8"
														},
														{
															"nativeSrc": "620:26:8",
															"nodeType": "YulAssignment",
															"src": "620:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:8",
																		"nodeType": "YulLiteral",
																		"src": "638:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:8",
																		"nodeType": "YulLiteral",
																		"src": "641:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:8"
																},
																"nativeSrc": "628:18:8",
																"nodeType": "YulFunctionCall",
																"src": "628:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:8",
														"nodeType": "YulTypedName",
														"src": "570:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:8",
														"nodeType": "YulTypedName",
														"src": "578:4:8",
														"type": ""
													}
												],
												"src": "531:121:8"
											},
											{
												"body": {
													"nativeSrc": "738:437:8",
													"nodeType": "YulBlock",
													"src": "738:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:8",
																"nodeType": "YulBlock",
																"src": "771:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:8",
																					"nodeType": "YulLiteral",
																					"src": "792:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:8"
																			},
																			"nativeSrc": "785:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:8"
																		},
																		"nativeSrc": "785:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:8"
																	},
																	{
																		"nativeSrc": "814:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:8",
																					"nodeType": "YulLiteral",
																					"src": "836:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:8",
																					"nodeType": "YulLiteral",
																					"src": "839:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:8"
																			},
																			"nativeSrc": "826:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:8",
																				"nodeType": "YulTypedName",
																				"src": "818:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:8",
																							"nodeType": "YulLiteral",
																							"src": "890:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:8",
																									"nodeType": "YulLiteral",
																									"src": "909:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:8"
																							},
																							"nativeSrc": "893:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:8"
																					},
																					"nativeSrc": "886:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:8"
																			},
																			"nativeSrc": "876:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:8",
																				"nodeType": "YulTypedName",
																				"src": "861:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:8",
																			"nodeType": "YulBlock",
																			"src": "951:23:8",
																			"statements": [
																				{
																					"nativeSrc": "953:19:8",
																					"nodeType": "YulAssignment",
																					"src": "953:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:8",
																					"nodeType": "YulLiteral",
																					"src": "945:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:8"
																			},
																			"nativeSrc": "930:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:8"
																		},
																		"nativeSrc": "927:47:8",
																		"nodeType": "YulIf",
																		"src": "927:47:8"
																	},
																	{
																		"nativeSrc": "987:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:8"
																							},
																							"nativeSrc": "1014:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:8"
																					},
																					"nativeSrc": "1007:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:8"
																			},
																			"nativeSrc": "997:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:8",
																				"nodeType": "YulTypedName",
																				"src": "991:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:8",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:8",
																			"nodeType": "YulBlock",
																			"src": "1139:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:8"
																						},
																						"nativeSrc": "1141:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:8"
																					},
																					"nativeSrc": "1141:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:8"
																			},
																			"nativeSrc": "1086:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:8"
																		},
																		"nativeSrc": "1078:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:8",
																			"nodeType": "YulBlock",
																			"src": "1100:26:8",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:8",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:8"
																						},
																						"nativeSrc": "1111:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:8",
																			"nodeType": "YulBlock",
																			"src": "1082:3:8",
																			"statements": []
																		},
																		"src": "1078:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:8",
																		"nodeType": "YulLiteral",
																		"src": "759:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:8"
																},
																"nativeSrc": "751:11:8",
																"nodeType": "YulFunctionCall",
																"src": "751:11:8"
															},
															"nativeSrc": "748:421:8",
															"nodeType": "YulIf",
															"src": "748:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:8",
														"nodeType": "YulTypedName",
														"src": "710:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:8",
														"nodeType": "YulTypedName",
														"src": "717:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:8",
														"nodeType": "YulTypedName",
														"src": "722:10:8",
														"type": ""
													}
												],
												"src": "657:518:8"
											},
											{
												"body": {
													"nativeSrc": "1265:81:8",
													"nodeType": "YulBlock",
													"src": "1265:81:8",
													"statements": [
														{
															"nativeSrc": "1275:65:8",
															"nodeType": "YulAssignment",
															"src": "1275:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:8"
																								},
																								"nativeSrc": "1304:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:8"
																								},
																								"nativeSrc": "1317:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:8"
																						},
																						"nativeSrc": "1300:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:8"
																				},
																				"nativeSrc": "1296:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:8"
																		},
																		"nativeSrc": "1286:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:8"
																		},
																		"nativeSrc": "1328:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:8"
																},
																"nativeSrc": "1283:57:8",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:8",
														"nodeType": "YulTypedName",
														"src": "1242:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:8",
														"nodeType": "YulTypedName",
														"src": "1248:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:8",
														"nodeType": "YulTypedName",
														"src": "1256:4:8",
														"type": ""
													}
												],
												"src": "1180:166:8"
											},
											{
												"body": {
													"nativeSrc": "1447:1203:8",
													"nodeType": "YulBlock",
													"src": "1447:1203:8",
													"statements": [
														{
															"nativeSrc": "1457:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:8"
																},
																"nativeSrc": "1471:10:8",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:8",
																"nodeType": "YulBlock",
																"src": "1524:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:8"
																			},
																			"nativeSrc": "1526:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:8"
																		},
																		"nativeSrc": "1526:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:8",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:8"
																				},
																				"nativeSrc": "1508:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:8"
																		},
																		"nativeSrc": "1504:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:8"
																},
																"nativeSrc": "1493:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:8"
															},
															"nativeSrc": "1490:56:8",
															"nodeType": "YulIf",
															"src": "1490:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:8"
																				},
																				"nativeSrc": "1631:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:8"
																		},
																		"nativeSrc": "1605:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:8"
																},
																"nativeSrc": "1555:97:8",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:8"
															},
															"nativeSrc": "1555:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:8"
														},
														{
															"nativeSrc": "1661:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:8",
																"nodeType": "YulLiteral",
																"src": "1678:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:8",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:17:8",
															"nodeType": "YulAssignment",
															"src": "1688:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1701:4:8",
																"nodeType": "YulLiteral",
																"src": "1701:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1688:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1688:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1751:642:8",
																		"nodeType": "YulBlock",
																		"src": "1751:642:8",
																		"statements": [
																			{
																				"nativeSrc": "1765:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1765:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1784:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1784:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1796:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1796:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1792:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1792:3:8"
																							},
																							"nativeSrc": "1792:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1792:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1780:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1780:3:8"
																					},
																					"nativeSrc": "1780:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1780:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1769:7:8",
																						"nodeType": "YulTypedName",
																						"src": "1769:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1813:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1813:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1857:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "1857:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1827:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "1827:29:8"
																					},
																					"nativeSrc": "1827:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1827:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1817:6:8",
																						"nodeType": "YulTypedName",
																						"src": "1817:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1875:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1875:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1884:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1879:1:8",
																						"nodeType": "YulTypedName",
																						"src": "1879:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1955:165:8",
																					"nodeType": "YulBlock",
																					"src": "1955:165:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "1980:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "1980:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "1998:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "1998:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2003:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "2003:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "1994:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "1994:3:8"
																												},
																												"nativeSrc": "1994:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "1994:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "1988:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "1988:5:8"
																										},
																										"nativeSrc": "1988:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "1988:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "1973:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "1973:6:8"
																								},
																								"nativeSrc": "1973:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1973:42:8"
																							},
																							"nativeSrc": "1973:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "1973:42:8"
																						},
																						{
																							"nativeSrc": "2032:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2032:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2046:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2046:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2054:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2054:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2042:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2042:3:8"
																								},
																								"nativeSrc": "2042:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2042:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2032:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2032:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2073:33:8",
																							"nodeType": "YulAssignment",
																							"src": "2073:33:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2090:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "2090:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2101:4:8",
																										"nodeType": "YulLiteral",
																										"src": "2101:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2086:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2086:3:8"
																								},
																								"nativeSrc": "2086:20:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2086:20:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2073:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2073:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1909:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "1909:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1912:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "1912:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1906:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1906:2:8"
																					},
																					"nativeSrc": "1906:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1906:14:8"
																				},
																				"nativeSrc": "1898:222:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1921:21:8",
																					"nodeType": "YulBlock",
																					"src": "1921:21:8",
																					"statements": [
																						{
																							"nativeSrc": "1923:17:8",
																							"nodeType": "YulAssignment",
																							"src": "1923:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1932:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "1932:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1935:4:8",
																										"nodeType": "YulLiteral",
																										"src": "1935:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1928:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1928:3:8"
																								},
																								"nativeSrc": "1928:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1928:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1923:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "1923:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1902:3:8",
																					"nodeType": "YulBlock",
																					"src": "1902:3:8",
																					"statements": []
																				},
																				"src": "1898:222:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "2168:166:8",
																					"nodeType": "YulBlock",
																					"src": "2168:166:8",
																					"statements": [
																						{
																							"nativeSrc": "2186:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2186:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2213:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2213:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2218:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2218:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2209:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2209:3:8"
																										},
																										"nativeSrc": "2209:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2209:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2203:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2203:5:8"
																								},
																								"nativeSrc": "2203:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2203:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2190:9:8",
																									"nodeType": "YulTypedName",
																									"src": "2190:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2253:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2253:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2265:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2265:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2292:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "2292:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2295:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "2295:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2288:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "2288:3:8"
																																		},
																																		"nativeSrc": "2288:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2288:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2304:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2304:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2284:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2284:3:8"
																																},
																																"nativeSrc": "2284:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2284:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2314:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2314:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2310:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2310:3:8"
																																},
																																"nativeSrc": "2310:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2310:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2280:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "2280:3:8"
																														},
																														"nativeSrc": "2280:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "2280:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2276:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2276:3:8"
																												},
																												"nativeSrc": "2276:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2276:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2261:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2261:3:8"
																										},
																										"nativeSrc": "2261:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2261:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2246:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2246:6:8"
																								},
																								"nativeSrc": "2246:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2246:74:8"
																							},
																							"nativeSrc": "2246:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2246:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2139:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2139:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2148:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2148:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2136:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2136:2:8"
																					},
																					"nativeSrc": "2136:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2136:19:8"
																				},
																				"nativeSrc": "2133:201:8",
																				"nodeType": "YulIf",
																				"src": "2133:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2354:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2354:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2368:1:8",
																											"nodeType": "YulLiteral",
																											"src": "2368:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2371:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "2371:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2364:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2364:3:8"
																									},
																									"nativeSrc": "2364:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2364:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2380:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2380:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2360:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2360:3:8"
																							},
																							"nativeSrc": "2360:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2360:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2347:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2347:6:8"
																					},
																					"nativeSrc": "2347:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2347:36:8"
																				},
																				"nativeSrc": "2347:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2347:36:8"
																			}
																		]
																	},
																	"nativeSrc": "1744:649:8",
																	"nodeType": "YulCase",
																	"src": "1744:649:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1749:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2410:234:8",
																		"nodeType": "YulBlock",
																		"src": "2410:234:8",
																		"statements": [
																			{
																				"nativeSrc": "2424:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2424:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2437:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2428:5:8",
																						"nodeType": "YulTypedName",
																						"src": "2428:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2473:67:8",
																					"nodeType": "YulBlock",
																					"src": "2473:67:8",
																					"statements": [
																						{
																							"nativeSrc": "2491:35:8",
																							"nodeType": "YulAssignment",
																							"src": "2491:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2510:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2510:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2515:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2515:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2506:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2506:3:8"
																										},
																										"nativeSrc": "2506:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2506:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2500:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2500:5:8"
																								},
																								"nativeSrc": "2500:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2500:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2491:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2491:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2454:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2454:6:8"
																				},
																				"nativeSrc": "2451:89:8",
																				"nodeType": "YulIf",
																				"src": "2451:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2560:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2560:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2619:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2619:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2626:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2626:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2566:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "2566:52:8"
																							},
																							"nativeSrc": "2566:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2566:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2553:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2553:6:8"
																					},
																					"nativeSrc": "2553:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2553:81:8"
																				},
																				"nativeSrc": "2553:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2553:81:8"
																			}
																		]
																	},
																	"nativeSrc": "2402:242:8",
																	"nodeType": "YulCase",
																	"src": "2402:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1724:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1724:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1732:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1732:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1721:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1721:2:8"
																},
																"nativeSrc": "1721:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1721:14:8"
															},
															"nativeSrc": "1714:930:8",
															"nodeType": "YulSwitch",
															"src": "1714:930:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1299:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:8",
														"nodeType": "YulTypedName",
														"src": "1432:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:8",
														"nodeType": "YulTypedName",
														"src": "1438:3:8",
														"type": ""
													}
												],
												"src": "1351:1299:8"
											},
											{
												"body": {
													"nativeSrc": "2756:102:8",
													"nodeType": "YulBlock",
													"src": "2756:102:8",
													"statements": [
														{
															"nativeSrc": "2766:26:8",
															"nodeType": "YulAssignment",
															"src": "2766:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2778:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2778:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2789:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2789:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2774:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2774:3:8"
																},
																"nativeSrc": "2774:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2774:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2766:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2766:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2808:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2808:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2823:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2839:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2839:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2844:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2844:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2835:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2835:3:8"
																						},
																						"nativeSrc": "2835:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2835:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2848:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2848:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2831:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:8"
																				},
																				"nativeSrc": "2831:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2819:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2819:3:8"
																		},
																		"nativeSrc": "2819:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2819:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2801:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:8"
																},
																"nativeSrc": "2801:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2801:51:8"
															},
															"nativeSrc": "2801:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2801:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2655:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2725:9:8",
														"nodeType": "YulTypedName",
														"src": "2725:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2736:6:8",
														"nodeType": "YulTypedName",
														"src": "2736:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2747:4:8",
														"nodeType": "YulTypedName",
														"src": "2747:4:8",
														"type": ""
													}
												],
												"src": "2655:203:8"
											},
											{
												"body": {
													"nativeSrc": "2911:174:8",
													"nodeType": "YulBlock",
													"src": "2911:174:8",
													"statements": [
														{
															"nativeSrc": "2921:16:8",
															"nodeType": "YulAssignment",
															"src": "2921:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2932:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2932:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2935:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2935:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2928:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2928:3:8"
																},
																"nativeSrc": "2928:9:8",
																"nodeType": "YulFunctionCall",
																"src": "2928:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2921:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2921:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2968:111:8",
																"nodeType": "YulBlock",
																"src": "2968:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2989:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2989:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2996:3:8",
																							"nodeType": "YulLiteral",
																							"src": "2996:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3001:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3001:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2992:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2992:3:8"
																					},
																					"nativeSrc": "2992:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2992:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2982:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2982:6:8"
																			},
																			"nativeSrc": "2982:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2982:31:8"
																		},
																		"nativeSrc": "2982:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2982:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3033:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3036:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3036:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3026:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:8"
																			},
																			"nativeSrc": "3026:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3026:15:8"
																		},
																		"nativeSrc": "3026:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3061:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3061:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3064:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3064:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3054:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3054:6:8"
																			},
																			"nativeSrc": "3054:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3054:15:8"
																		},
																		"nativeSrc": "3054:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3054:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2952:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "2952:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2955:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2955:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2949:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2949:2:8"
																},
																"nativeSrc": "2949:10:8",
																"nodeType": "YulFunctionCall",
																"src": "2949:10:8"
															},
															"nativeSrc": "2946:133:8",
															"nodeType": "YulIf",
															"src": "2946:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2863:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2894:1:8",
														"nodeType": "YulTypedName",
														"src": "2894:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2897:1:8",
														"nodeType": "YulTypedName",
														"src": "2897:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2903:3:8",
														"nodeType": "YulTypedName",
														"src": "2903:3:8",
														"type": ""
													}
												],
												"src": "2863:222:8"
											},
											{
												"body": {
													"nativeSrc": "3247:188:8",
													"nodeType": "YulBlock",
													"src": "3247:188:8",
													"statements": [
														{
															"nativeSrc": "3257:26:8",
															"nodeType": "YulAssignment",
															"src": "3257:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3269:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3269:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3280:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3280:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3265:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3265:3:8"
																},
																"nativeSrc": "3265:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3265:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3257:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3257:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3299:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3314:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3314:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3330:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3330:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3335:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3335:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3326:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3326:3:8"
																						},
																						"nativeSrc": "3326:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3326:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3339:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3339:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3322:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3322:3:8"
																				},
																				"nativeSrc": "3322:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3322:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3310:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3310:3:8"
																		},
																		"nativeSrc": "3310:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3310:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:8"
																},
																"nativeSrc": "3292:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3292:51:8"
															},
															"nativeSrc": "3292:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3292:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3363:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3374:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3359:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:8"
																		},
																		"nativeSrc": "3359:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3379:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3379:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3352:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:8"
																},
																"nativeSrc": "3352:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3352:34:8"
															},
															"nativeSrc": "3352:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3352:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:8"
																		},
																		"nativeSrc": "3402:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3422:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3422:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3395:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:8"
																},
																"nativeSrc": "3395:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3395:34:8"
															},
															"nativeSrc": "3395:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3395:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3090:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3200:9:8",
														"nodeType": "YulTypedName",
														"src": "3200:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3211:6:8",
														"nodeType": "YulTypedName",
														"src": "3211:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3219:6:8",
														"nodeType": "YulTypedName",
														"src": "3219:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3227:6:8",
														"nodeType": "YulTypedName",
														"src": "3227:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3238:4:8",
														"nodeType": "YulTypedName",
														"src": "3238:4:8",
														"type": ""
													}
												],
												"src": "3090:345:8"
											},
											{
												"body": {
													"nativeSrc": "3541:76:8",
													"nodeType": "YulBlock",
													"src": "3541:76:8",
													"statements": [
														{
															"nativeSrc": "3551:26:8",
															"nodeType": "YulAssignment",
															"src": "3551:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3563:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3563:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3574:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3574:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3559:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3559:3:8"
																},
																"nativeSrc": "3559:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3559:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3551:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3551:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3593:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3593:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3604:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3604:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3586:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3586:6:8"
																},
																"nativeSrc": "3586:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3586:25:8"
															},
															"nativeSrc": "3586:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "3586:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3440:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3510:9:8",
														"nodeType": "YulTypedName",
														"src": "3510:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3521:6:8",
														"nodeType": "YulTypedName",
														"src": "3521:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3532:4:8",
														"nodeType": "YulTypedName",
														"src": "3532:4:8",
														"type": ""
													}
												],
												"src": "3440:177:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x4D454D45 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP1 PUSH1 0x3 PUSH2 0x4A DUP4 DUP3 PUSH2 0x2E8 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x57 DUP3 DUP3 PUSH2 0x2E8 JUMP JUMPDEST POP POP POP PUSH2 0x70 PUSH2 0x6B PUSH2 0x98 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH2 0x93 CALLER PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0xED JUMP JUMPDEST PUSH2 0x3C7 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x126 PUSH0 DUP4 DUP4 PUSH2 0x12A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x154 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x3A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1C4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x112 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E0 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x278 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x296 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2E3 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2C1 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2E0 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2CD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x301 JUMPI PUSH2 0x301 PUSH2 0x250 JUMP JUMPDEST PUSH2 0x315 DUP2 PUSH2 0x30F DUP5 SLOAD PUSH2 0x264 JUMP JUMPDEST DUP5 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x347 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x330 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2E0 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x376 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x356 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x393 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3C1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1045 DUP1 PUSH2 0x3D4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF76F8D78 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x363 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xEB91E651 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xEF2AF922 EQ PUSH2 0x32A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x726B5771 EQ PUSH2 0x258 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1E6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x179 PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x4C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x563 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xED2 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x631 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x179 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4D454D45 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0x1B6 PUSH12 0x6765C793FA10079D0000000 DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0xED2 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x394 SWAP1 PUSH2 0xF74 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C0 SWAP1 PUSH2 0xF74 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x422 DUP2 DUP6 DUP6 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x4AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x4BE DUP7 DUP7 DUP7 PUSH2 0x8F3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x970 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0x916 JUMP JUMPDEST PUSH12 0x6765C793FA10079D0000000 DUP2 PUSH2 0x4F9 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST ADD GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720776F756C6420657863656564206D617820737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x552 DUP3 DUP3 PUSH2 0x9C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x560 CALLER DUP3 PUSH2 0x9F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x56B PUSH2 0x916 JUMP JUMPDEST PUSH2 0x4D8 PUSH0 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x57C PUSH2 0x916 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x6 PUSH0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x59B JUMPI PUSH2 0x59B PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x624 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x5E7 JUMPI PUSH2 0x5E7 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x57E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x639 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x394 SWAP1 PUSH2 0xF74 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x6CE DUP6 DUP6 PUSH2 0xAC1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x560 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x727 PUSH2 0x916 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x6 PUSH0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x746 JUMPI PUSH2 0x746 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7CF JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x792 JUMPI PUSH2 0x792 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x729 JUMP JUMPDEST PUSH2 0x7DF PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x560 DUP2 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x855 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x560 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x62C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x900 DUP6 DUP3 DUP6 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x90B DUP6 DUP6 DUP6 PUSH2 0xC16 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x978 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x552 PUSH0 DUP4 DUP4 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x552 DUP3 PUSH0 DUP4 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA86 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x9A8 CALLER SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x422 DUP2 DUP6 DUP6 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB9B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB92 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0xB9B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0xB9B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x62C DUP4 DUP4 DUP4 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD5D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD79 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDDC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE34 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE53 DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE73 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE7C DUP5 PUSH2 0xE1E JUMP JUMPDEST SWAP3 POP PUSH2 0xE8A PUSH1 0x20 DUP6 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xECB DUP3 PUSH2 0xE1E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xF09 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0xF33 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF54 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF5D DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP2 POP PUSH2 0xF6B PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF88 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFA6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1059191C995CDCC81A5CC8189B1858DADB1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x428 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xF7 DIV 0x4E JUMP PUSH32 0xC427A039A594FACD60F5EA619A4D59A9EFAEEF072C22C15ABD3764736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "230:2716:7:-:0;;;488:137;;;;;;;;;-1:-1:-1;508:4:7;;;;;;;;;;;;-1:-1:-1;;;508:4:7;;;;;;;514:6;;;;;;;;;;;;;;;508:4;1962:5:3;:13;508:4:7;1962:5:3;:13;:::i;:::-;-1:-1:-1;1985:7:3;:17;1995:7;1985;:17;:::i;:::-;;1896:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;996:7:2;:15;;-1:-1:-1;;;;996:15:2;;;543:38:7::2;549:10;561:19;543:5;:38::i;:::-;230:2716:::0;;640:96:6;719:10;;640:96::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;7721:208:3:-;-1:-1:-1;;;;;7791:21:3;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:3;;7864:1;7835:32;;;2801:51:8;2774:18;;7835:32:3;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:3;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:3;;-1:-1:-1;6356:540:3;;-1:-1:-1;;;;;6570:15:3;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:3;;-1:-1:-1;;;;;3310:32:8;;6649:50:3;;;3292:51:8;3359:18;;;3352:34;;;3402:18;;;3395:34;;;3265:18;;6649:50:3;3090:345:8;6599:115:3;-1:-1:-1;;;;;6834:15:3;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:3;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:3;7355:4;-1:-1:-1;;;;;7346:25:3;;7365:5;7346:25;;;;3586::8;;3574:2;3559:18;;3440:177;7346:25:3;;;;;;;;6271:1107;;;:::o;14:127:8:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:8;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:8;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:8;;;2500:26;2451:89;-1:-1:-1;;1308:1:8;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:8;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:8;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:8;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:8:o;2863:222::-;2928:9;;;2949:10;;;2946:133;;;3001:10;2996:3;2992:20;2989:1;2982:31;3036:4;3033:1;3026:15;3064:4;3061:1;3054:15;2946:133;2863:222;;;;:::o;3440:177::-;230:2716:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NAME_1019": {
									"entryPoint": null,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SYMBOL_1022": {
									"entryPoint": null,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_763": {
									"entryPoint": 2201,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_823": {
									"entryPoint": 2766,
									"id": 823,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_745": {
									"entryPoint": 2553,
									"id": 745,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2326,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_712": {
									"entryPoint": 2501,
									"id": 712,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_988": {
									"entryPoint": null,
									"id": 988,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_340": {
									"entryPoint": 2686,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_313": {
									"entryPoint": 2214,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_324": {
									"entryPoint": 3187,
									"id": 324,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_871": {
									"entryPoint": 2977,
									"id": 871,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 2605,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_602": {
									"entryPoint": 3094,
									"id": 602,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_356": {
									"entryPoint": 2416,
									"id": 356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_679": {
									"entryPoint": 3267,
									"id": 679,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_499": {
									"entryPoint": null,
									"id": 499,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_523": {
									"entryPoint": 1045,
									"id": 523,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_458": {
									"entryPoint": null,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blacklistBatch_1179": {
									"entryPoint": 1396,
									"id": 1179,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@blacklist_1122": {
									"entryPoint": 2125,
									"id": 1122,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_1058": {
									"entryPoint": 1366,
									"id": 1058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_436": {
									"entryPoint": null,
									"id": 436,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isBlacklisted_1026": {
									"entryPoint": null,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxSupply_1016": {
									"entryPoint": null,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1084": {
									"entryPoint": 1242,
									"id": 1084,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_418": {
									"entryPoint": 901,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1093": {
									"entryPoint": 1585,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeBlacklistBatch_1216": {
									"entryPoint": 1823,
									"id": 1216,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@removeBlacklist_1141": {
									"entryPoint": 1751,
									"id": 1141,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 1379,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_427": {
									"entryPoint": 1601,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_445": {
									"entryPoint": null,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1270": {
									"entryPoint": 1070,
									"id": 1270,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_555": {
									"entryPoint": 2291,
									"id": 555,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 2007,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1242": {
									"entryPoint": 1616,
									"id": 1242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_482": {
									"entryPoint": 2753,
									"id": 482,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1102": {
									"entryPoint": 1224,
									"id": 1102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_787cfce62952f8e769386983f80bd129e75108362ed0e852155d2ee244277933__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 4060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6636:8",
										"nodeType": "YulBlock",
										"src": "0:6636:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:8",
													"nodeType": "YulBlock",
													"src": "135:297:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:8",
																		"nodeType": "YulLiteral",
																		"src": "163:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:8"
																},
																"nativeSrc": "145:21:8",
																"nodeType": "YulFunctionCall",
																"src": "145:21:8"
															},
															"nativeSrc": "145:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:8"
														},
														{
															"nativeSrc": "175:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:8"
																},
																"nativeSrc": "189:13:8",
																"nodeType": "YulFunctionCall",
																"src": "189:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:8",
																	"nodeType": "YulTypedName",
																	"src": "179:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:8",
																				"nodeType": "YulLiteral",
																				"src": "233:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:8"
																		},
																		"nativeSrc": "218:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:8"
																},
																"nativeSrc": "211:34:8",
																"nodeType": "YulFunctionCall",
																"src": "211:34:8"
															},
															"nativeSrc": "211:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:8",
																				"nodeType": "YulLiteral",
																				"src": "275:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:8"
																		},
																		"nativeSrc": "260:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:8",
																				"nodeType": "YulLiteral",
																				"src": "292:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:8"
																		},
																		"nativeSrc": "280:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:8"
																},
																"nativeSrc": "254:50:8",
																"nodeType": "YulFunctionCall",
																"src": "254:50:8"
															},
															"nativeSrc": "254:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:8"
																				},
																				"nativeSrc": "324:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:8",
																				"nodeType": "YulLiteral",
																				"src": "348:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:8"
																		},
																		"nativeSrc": "320:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:8",
																		"nodeType": "YulLiteral",
																		"src": "353:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:8"
																},
																"nativeSrc": "313:42:8",
																"nodeType": "YulFunctionCall",
																"src": "313:42:8"
															},
															"nativeSrc": "313:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:8"
														},
														{
															"nativeSrc": "364:62:8",
															"nodeType": "YulAssignment",
															"src": "364:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:8",
																								"nodeType": "YulLiteral",
																								"src": "407:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:8"
																						},
																						"nativeSrc": "395:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:8",
																								"nodeType": "YulLiteral",
																								"src": "416:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:8"
																						},
																						"nativeSrc": "412:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:8"
																				},
																				"nativeSrc": "391:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:8"
																		},
																		"nativeSrc": "376:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:8",
																		"nodeType": "YulLiteral",
																		"src": "423:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:8"
																},
																"nativeSrc": "372:54:8",
																"nodeType": "YulFunctionCall",
																"src": "372:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:418:8"
											},
											{
												"body": {
													"nativeSrc": "486:124:8",
													"nodeType": "YulBlock",
													"src": "486:124:8",
													"statements": [
														{
															"nativeSrc": "496:29:8",
															"nodeType": "YulAssignment",
															"src": "496:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:8"
																},
																"nativeSrc": "505:20:8",
																"nodeType": "YulFunctionCall",
																"src": "505:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:8",
																"nodeType": "YulBlock",
																"src": "588:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:8",
																					"nodeType": "YulLiteral",
																					"src": "597:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:8",
																					"nodeType": "YulLiteral",
																					"src": "600:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:8"
																			},
																			"nativeSrc": "590:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:8"
																		},
																		"nativeSrc": "590:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:8",
																										"nodeType": "YulLiteral",
																										"src": "573:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:8",
																										"nodeType": "YulLiteral",
																										"src": "578:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:8"
																								},
																								"nativeSrc": "569:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:8",
																								"nodeType": "YulLiteral",
																								"src": "582:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:8"
																						},
																						"nativeSrc": "565:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:8"
																				},
																				"nativeSrc": "554:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:8"
																		},
																		"nativeSrc": "544:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:8"
																},
																"nativeSrc": "537:50:8",
																"nodeType": "YulFunctionCall",
																"src": "537:50:8"
															},
															"nativeSrc": "534:70:8",
															"nodeType": "YulIf",
															"src": "534:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:8",
														"nodeType": "YulTypedName",
														"src": "465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:8",
														"nodeType": "YulTypedName",
														"src": "476:5:8",
														"type": ""
													}
												],
												"src": "437:173:8"
											},
											{
												"body": {
													"nativeSrc": "702:213:8",
													"nodeType": "YulBlock",
													"src": "702:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:8",
																"nodeType": "YulBlock",
																"src": "748:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:8",
																					"nodeType": "YulLiteral",
																					"src": "757:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:8",
																					"nodeType": "YulLiteral",
																					"src": "760:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:8"
																			},
																			"nativeSrc": "750:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:8"
																		},
																		"nativeSrc": "750:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:8"
																		},
																		"nativeSrc": "719:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:8",
																		"nodeType": "YulLiteral",
																		"src": "744:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:8"
																},
																"nativeSrc": "715:32:8",
																"nodeType": "YulFunctionCall",
																"src": "715:32:8"
															},
															"nativeSrc": "712:52:8",
															"nodeType": "YulIf",
															"src": "712:52:8"
														},
														{
															"nativeSrc": "773:39:8",
															"nodeType": "YulAssignment",
															"src": "773:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:8"
																},
																"nativeSrc": "783:29:8",
																"nodeType": "YulFunctionCall",
																"src": "783:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:8"
																}
															]
														},
														{
															"nativeSrc": "821:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:8",
																"nodeType": "YulLiteral",
																"src": "834:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:8",
																	"nodeType": "YulTypedName",
																	"src": "825:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:8",
															"nodeType": "YulAssignment",
															"src": "844:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:8",
																				"nodeType": "YulLiteral",
																				"src": "881:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:8"
																		},
																		"nativeSrc": "866:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:8"
																},
																"nativeSrc": "853:32:8",
																"nodeType": "YulFunctionCall",
																"src": "853:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:8"
																}
															]
														},
														{
															"nativeSrc": "894:15:8",
															"nodeType": "YulAssignment",
															"src": "894:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:8",
																"nodeType": "YulIdentifier",
																"src": "904:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:8",
														"nodeType": "YulTypedName",
														"src": "660:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:8",
														"nodeType": "YulTypedName",
														"src": "671:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:8",
														"nodeType": "YulTypedName",
														"src": "683:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:8",
														"nodeType": "YulTypedName",
														"src": "691:6:8",
														"type": ""
													}
												],
												"src": "615:300:8"
											},
											{
												"body": {
													"nativeSrc": "1015:92:8",
													"nodeType": "YulBlock",
													"src": "1015:92:8",
													"statements": [
														{
															"nativeSrc": "1025:26:8",
															"nodeType": "YulAssignment",
															"src": "1025:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:8"
																},
																"nativeSrc": "1033:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:8"
																				},
																				"nativeSrc": "1085:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:8"
																		},
																		"nativeSrc": "1078:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:8"
																},
																"nativeSrc": "1060:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:8"
															},
															"nativeSrc": "1060:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:8",
														"nodeType": "YulTypedName",
														"src": "984:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:8",
														"nodeType": "YulTypedName",
														"src": "995:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:8",
														"nodeType": "YulTypedName",
														"src": "1006:4:8",
														"type": ""
													}
												],
												"src": "920:187:8"
											},
											{
												"body": {
													"nativeSrc": "1213:76:8",
													"nodeType": "YulBlock",
													"src": "1213:76:8",
													"statements": [
														{
															"nativeSrc": "1223:26:8",
															"nodeType": "YulAssignment",
															"src": "1223:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:8"
																},
																"nativeSrc": "1231:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:8"
																},
																"nativeSrc": "1258:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:8"
															},
															"nativeSrc": "1258:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:8",
														"nodeType": "YulTypedName",
														"src": "1182:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:8",
														"nodeType": "YulTypedName",
														"src": "1193:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:8",
														"nodeType": "YulTypedName",
														"src": "1204:4:8",
														"type": ""
													}
												],
												"src": "1112:177:8"
											},
											{
												"body": {
													"nativeSrc": "1398:270:8",
													"nodeType": "YulBlock",
													"src": "1398:270:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:8",
																"nodeType": "YulBlock",
																"src": "1444:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:8"
																			},
																			"nativeSrc": "1446:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:8"
																		},
																		"nativeSrc": "1446:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:8"
																		},
																		"nativeSrc": "1415:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:8"
																},
																"nativeSrc": "1411:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:8"
															},
															"nativeSrc": "1408:52:8",
															"nodeType": "YulIf",
															"src": "1408:52:8"
														},
														{
															"nativeSrc": "1469:39:8",
															"nodeType": "YulAssignment",
															"src": "1469:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:8"
																},
																"nativeSrc": "1479:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:8"
																}
															]
														},
														{
															"nativeSrc": "1517:48:8",
															"nodeType": "YulAssignment",
															"src": "1517:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:8"
																		},
																		"nativeSrc": "1546:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:8"
																},
																"nativeSrc": "1527:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:8"
																}
															]
														},
														{
															"nativeSrc": "1574:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:8",
																"nodeType": "YulLiteral",
																"src": "1587:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:8",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:8",
															"nodeType": "YulAssignment",
															"src": "1597:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:8"
																		},
																		"nativeSrc": "1619:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:8"
																},
																"nativeSrc": "1606:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:8"
																}
															]
														},
														{
															"nativeSrc": "1647:15:8",
															"nodeType": "YulAssignment",
															"src": "1647:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:8",
																"nodeType": "YulIdentifier",
																"src": "1657:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:8",
														"nodeType": "YulTypedName",
														"src": "1348:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:8",
														"nodeType": "YulTypedName",
														"src": "1359:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:8",
														"nodeType": "YulTypedName",
														"src": "1371:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:8",
														"nodeType": "YulTypedName",
														"src": "1379:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:8",
														"nodeType": "YulTypedName",
														"src": "1387:6:8",
														"type": ""
													}
												],
												"src": "1294:374:8"
											},
											{
												"body": {
													"nativeSrc": "1770:87:8",
													"nodeType": "YulBlock",
													"src": "1770:87:8",
													"statements": [
														{
															"nativeSrc": "1780:26:8",
															"nodeType": "YulAssignment",
															"src": "1780:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:8"
																},
																"nativeSrc": "1788:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:8"
																		},
																		"nativeSrc": "1833:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:8"
																},
																"nativeSrc": "1815:36:8",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:8"
															},
															"nativeSrc": "1815:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:8",
														"nodeType": "YulTypedName",
														"src": "1739:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:8",
														"nodeType": "YulTypedName",
														"src": "1750:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:8",
														"nodeType": "YulTypedName",
														"src": "1761:4:8",
														"type": ""
													}
												],
												"src": "1673:184:8"
											},
											{
												"body": {
													"nativeSrc": "1932:156:8",
													"nodeType": "YulBlock",
													"src": "1932:156:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:8",
																"nodeType": "YulBlock",
																"src": "1978:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:8"
																			},
																			"nativeSrc": "1980:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:8"
																		},
																		"nativeSrc": "1980:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:8"
																		},
																		"nativeSrc": "1949:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:8"
																},
																"nativeSrc": "1945:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:8"
															},
															"nativeSrc": "1942:52:8",
															"nodeType": "YulIf",
															"src": "1942:52:8"
														},
														{
															"nativeSrc": "2003:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2003:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2016:1:8",
																"nodeType": "YulLiteral",
																"src": "2016:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2007:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2007:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2026:32:8",
															"nodeType": "YulAssignment",
															"src": "2026:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2048:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2048:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2035:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2035:12:8"
																},
																"nativeSrc": "2035:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2035:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2026:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2026:5:8"
																}
															]
														},
														{
															"nativeSrc": "2067:15:8",
															"nodeType": "YulAssignment",
															"src": "2067:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2077:5:8",
																"nodeType": "YulIdentifier",
																"src": "2077:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2067:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2067:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1862:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:8",
														"nodeType": "YulTypedName",
														"src": "1898:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:8",
														"nodeType": "YulTypedName",
														"src": "1909:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:8",
														"nodeType": "YulTypedName",
														"src": "1921:6:8",
														"type": ""
													}
												],
												"src": "1862:226:8"
											},
											{
												"body": {
													"nativeSrc": "2163:116:8",
													"nodeType": "YulBlock",
													"src": "2163:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2209:16:8",
																"nodeType": "YulBlock",
																"src": "2209:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2218:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2218:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2221:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2221:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2211:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:8"
																			},
																			"nativeSrc": "2211:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2211:12:8"
																		},
																		"nativeSrc": "2211:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2211:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2193:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2193:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:8"
																		},
																		"nativeSrc": "2180:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2176:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:8"
																},
																"nativeSrc": "2176:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2176:32:8"
															},
															"nativeSrc": "2173:52:8",
															"nodeType": "YulIf",
															"src": "2173:52:8"
														},
														{
															"nativeSrc": "2234:39:8",
															"nodeType": "YulAssignment",
															"src": "2234:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2263:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2244:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2244:18:8"
																},
																"nativeSrc": "2244:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2244:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2234:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2093:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2129:9:8",
														"nodeType": "YulTypedName",
														"src": "2129:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2140:7:8",
														"nodeType": "YulTypedName",
														"src": "2140:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2152:6:8",
														"nodeType": "YulTypedName",
														"src": "2152:6:8",
														"type": ""
													}
												],
												"src": "2093:186:8"
											},
											{
												"body": {
													"nativeSrc": "2389:505:8",
													"nodeType": "YulBlock",
													"src": "2389:505:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2435:16:8",
																"nodeType": "YulBlock",
																"src": "2435:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2444:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2447:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2447:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2437:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2437:6:8"
																			},
																			"nativeSrc": "2437:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2437:12:8"
																		},
																		"nativeSrc": "2437:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2437:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2410:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2410:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2419:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2419:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2406:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2406:3:8"
																		},
																		"nativeSrc": "2406:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2406:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2431:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2431:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2402:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2402:3:8"
																},
																"nativeSrc": "2402:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2402:32:8"
															},
															"nativeSrc": "2399:52:8",
															"nodeType": "YulIf",
															"src": "2399:52:8"
														},
														{
															"nativeSrc": "2460:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2460:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2487:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2487:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2474:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2474:12:8"
																},
																"nativeSrc": "2474:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2474:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2464:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2464:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2540:16:8",
																"nodeType": "YulBlock",
																"src": "2540:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2549:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2549:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2552:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2542:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2542:6:8"
																			},
																			"nativeSrc": "2542:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2542:12:8"
																		},
																		"nativeSrc": "2542:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2542:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2512:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2512:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2520:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2520:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2509:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2509:2:8"
																},
																"nativeSrc": "2509:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2509:30:8"
															},
															"nativeSrc": "2506:50:8",
															"nodeType": "YulIf",
															"src": "2506:50:8"
														},
														{
															"nativeSrc": "2565:32:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2565:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2579:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2579:9:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2590:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2590:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2575:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2575:3:8"
																},
																"nativeSrc": "2575:22:8",
																"nodeType": "YulFunctionCall",
																"src": "2575:22:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2569:2:8",
																	"nodeType": "YulTypedName",
																	"src": "2569:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2645:16:8",
																"nodeType": "YulBlock",
																"src": "2645:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2654:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2654:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2657:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2657:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2647:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:8"
																			},
																			"nativeSrc": "2647:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2647:12:8"
																		},
																		"nativeSrc": "2647:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2647:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2624:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2624:2:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2628:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2628:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2620:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2620:3:8"
																				},
																				"nativeSrc": "2620:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2620:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2635:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2635:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2616:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2616:3:8"
																		},
																		"nativeSrc": "2616:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2616:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2609:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:8"
																},
																"nativeSrc": "2609:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2609:35:8"
															},
															"nativeSrc": "2606:55:8",
															"nodeType": "YulIf",
															"src": "2606:55:8"
														},
														{
															"nativeSrc": "2670:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2670:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2697:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "2697:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2684:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2684:12:8"
																},
																"nativeSrc": "2684:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2684:16:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2674:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2674:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2743:16:8",
																"nodeType": "YulBlock",
																"src": "2743:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2752:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2752:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2755:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2755:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2745:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2745:6:8"
																			},
																			"nativeSrc": "2745:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2745:12:8"
																		},
																		"nativeSrc": "2745:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2745:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2715:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2715:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2723:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2723:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2712:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2712:2:8"
																},
																"nativeSrc": "2712:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2712:30:8"
															},
															"nativeSrc": "2709:50:8",
															"nodeType": "YulIf",
															"src": "2709:50:8"
														},
														{
															"body": {
																"nativeSrc": "2817:16:8",
																"nodeType": "YulBlock",
																"src": "2817:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2826:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2826:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2819:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2819:6:8"
																			},
																			"nativeSrc": "2819:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2819:12:8"
																		},
																		"nativeSrc": "2819:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2819:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2782:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2782:2:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2790:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2790:1:8",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2793:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "2793:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2786:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2786:3:8"
																						},
																						"nativeSrc": "2786:14:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2786:14:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2778:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2778:3:8"
																				},
																				"nativeSrc": "2778:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2778:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2803:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2803:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2774:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2774:3:8"
																		},
																		"nativeSrc": "2774:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2774:32:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2808:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2808:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2771:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2771:2:8"
																},
																"nativeSrc": "2771:45:8",
																"nodeType": "YulFunctionCall",
																"src": "2771:45:8"
															},
															"nativeSrc": "2768:65:8",
															"nodeType": "YulIf",
															"src": "2768:65:8"
														},
														{
															"nativeSrc": "2842:21:8",
															"nodeType": "YulAssignment",
															"src": "2842:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2856:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "2856:2:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2860:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2860:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2852:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:8"
																},
																"nativeSrc": "2852:11:8",
																"nodeType": "YulFunctionCall",
																"src": "2852:11:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2842:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2842:6:8"
																}
															]
														},
														{
															"nativeSrc": "2872:16:8",
															"nodeType": "YulAssignment",
															"src": "2872:16:8",
															"value": {
																"name": "length",
																"nativeSrc": "2882:6:8",
																"nodeType": "YulIdentifier",
																"src": "2882:6:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2872:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "2284:610:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2347:9:8",
														"nodeType": "YulTypedName",
														"src": "2347:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2358:7:8",
														"nodeType": "YulTypedName",
														"src": "2358:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2370:6:8",
														"nodeType": "YulTypedName",
														"src": "2370:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2378:6:8",
														"nodeType": "YulTypedName",
														"src": "2378:6:8",
														"type": ""
													}
												],
												"src": "2284:610:8"
											},
											{
												"body": {
													"nativeSrc": "3000:102:8",
													"nodeType": "YulBlock",
													"src": "3000:102:8",
													"statements": [
														{
															"nativeSrc": "3010:26:8",
															"nodeType": "YulAssignment",
															"src": "3010:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3022:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3022:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3033:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3018:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3018:3:8"
																},
																"nativeSrc": "3018:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3018:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3010:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3010:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3052:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3052:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3067:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3067:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3083:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3083:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3088:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3088:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3079:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3079:3:8"
																						},
																						"nativeSrc": "3079:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3079:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3092:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3092:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3075:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3075:3:8"
																				},
																				"nativeSrc": "3075:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3075:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3063:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:8"
																		},
																		"nativeSrc": "3063:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3063:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3045:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3045:6:8"
																},
																"nativeSrc": "3045:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3045:51:8"
															},
															"nativeSrc": "3045:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3045:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2899:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2969:9:8",
														"nodeType": "YulTypedName",
														"src": "2969:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2980:6:8",
														"nodeType": "YulTypedName",
														"src": "2980:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2991:4:8",
														"nodeType": "YulTypedName",
														"src": "2991:4:8",
														"type": ""
													}
												],
												"src": "2899:203:8"
											},
											{
												"body": {
													"nativeSrc": "3194:173:8",
													"nodeType": "YulBlock",
													"src": "3194:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3240:16:8",
																"nodeType": "YulBlock",
																"src": "3240:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3249:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3249:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3252:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3252:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3242:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3242:6:8"
																			},
																			"nativeSrc": "3242:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3242:12:8"
																		},
																		"nativeSrc": "3242:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3242:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3215:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3215:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3224:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3224:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3211:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:8"
																		},
																		"nativeSrc": "3211:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3236:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3236:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3207:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3207:3:8"
																},
																"nativeSrc": "3207:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3207:32:8"
															},
															"nativeSrc": "3204:52:8",
															"nodeType": "YulIf",
															"src": "3204:52:8"
														},
														{
															"nativeSrc": "3265:39:8",
															"nodeType": "YulAssignment",
															"src": "3265:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3294:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3294:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3275:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3275:18:8"
																},
																"nativeSrc": "3275:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3275:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3265:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3265:6:8"
																}
															]
														},
														{
															"nativeSrc": "3313:48:8",
															"nodeType": "YulAssignment",
															"src": "3313:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3346:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3346:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3357:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3357:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3342:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:8"
																		},
																		"nativeSrc": "3342:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3342:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3323:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3323:18:8"
																},
																"nativeSrc": "3323:38:8",
																"nodeType": "YulFunctionCall",
																"src": "3323:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3313:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3107:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3152:9:8",
														"nodeType": "YulTypedName",
														"src": "3152:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3163:7:8",
														"nodeType": "YulTypedName",
														"src": "3163:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3175:6:8",
														"nodeType": "YulTypedName",
														"src": "3175:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3183:6:8",
														"nodeType": "YulTypedName",
														"src": "3183:6:8",
														"type": ""
													}
												],
												"src": "3107:260:8"
											},
											{
												"body": {
													"nativeSrc": "3427:325:8",
													"nodeType": "YulBlock",
													"src": "3427:325:8",
													"statements": [
														{
															"nativeSrc": "3437:22:8",
															"nodeType": "YulAssignment",
															"src": "3437:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3451:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3451:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3454:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3454:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3447:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3447:3:8"
																},
																"nativeSrc": "3447:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3447:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3437:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:8"
																}
															]
														},
														{
															"nativeSrc": "3468:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3468:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3498:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3498:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3504:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3504:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3494:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3494:3:8"
																},
																"nativeSrc": "3494:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3494:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3472:18:8",
																	"nodeType": "YulTypedName",
																	"src": "3472:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3545:31:8",
																"nodeType": "YulBlock",
																"src": "3545:31:8",
																"statements": [
																	{
																		"nativeSrc": "3547:27:8",
																		"nodeType": "YulAssignment",
																		"src": "3547:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3561:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3561:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3569:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3569:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3557:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3557:3:8"
																			},
																			"nativeSrc": "3557:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3557:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3547:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3525:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3525:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3518:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:8"
																},
																"nativeSrc": "3518:26:8",
																"nodeType": "YulFunctionCall",
																"src": "3518:26:8"
															},
															"nativeSrc": "3515:61:8",
															"nodeType": "YulIf",
															"src": "3515:61:8"
														},
														{
															"body": {
																"nativeSrc": "3635:111:8",
																"nodeType": "YulBlock",
																"src": "3635:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3656:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3656:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3663:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3663:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3668:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3668:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3659:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3659:3:8"
																					},
																					"nativeSrc": "3659:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3659:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3649:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3649:6:8"
																			},
																			"nativeSrc": "3649:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3649:31:8"
																		},
																		"nativeSrc": "3649:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3649:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3700:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3703:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3703:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3693:6:8"
																			},
																			"nativeSrc": "3693:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3693:15:8"
																		},
																		"nativeSrc": "3693:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3693:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3728:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3728:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3731:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3731:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3721:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3721:6:8"
																			},
																			"nativeSrc": "3721:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3721:15:8"
																		},
																		"nativeSrc": "3721:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3721:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3591:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "3591:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3614:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3614:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3622:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3622:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3611:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3611:2:8"
																		},
																		"nativeSrc": "3611:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3611:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3588:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3588:2:8"
																},
																"nativeSrc": "3588:38:8",
																"nodeType": "YulFunctionCall",
																"src": "3588:38:8"
															},
															"nativeSrc": "3585:161:8",
															"nodeType": "YulIf",
															"src": "3585:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3372:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3407:4:8",
														"nodeType": "YulTypedName",
														"src": "3407:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3416:6:8",
														"nodeType": "YulTypedName",
														"src": "3416:6:8",
														"type": ""
													}
												],
												"src": "3372:380:8"
											},
											{
												"body": {
													"nativeSrc": "3931:172:8",
													"nodeType": "YulBlock",
													"src": "3931:172:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3948:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3948:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3959:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3941:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:8"
																},
																"nativeSrc": "3941:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3941:21:8"
															},
															"nativeSrc": "3941:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3941:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3982:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3982:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3993:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3993:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3978:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3978:3:8"
																		},
																		"nativeSrc": "3978:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3978:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3998:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3998:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3971:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:8"
																},
																"nativeSrc": "3971:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3971:30:8"
															},
															"nativeSrc": "3971:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3971:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4021:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4021:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4032:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4032:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4017:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4017:3:8"
																		},
																		"nativeSrc": "4017:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4017:18:8"
																	},
																	{
																		"hexValue": "4164647265737320697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "4037:24:8",
																		"nodeType": "YulLiteral",
																		"src": "4037:24:8",
																		"type": "",
																		"value": "Address is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4010:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4010:6:8"
																},
																"nativeSrc": "4010:52:8",
																"nodeType": "YulFunctionCall",
																"src": "4010:52:8"
															},
															"nativeSrc": "4010:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "4010:52:8"
														},
														{
															"nativeSrc": "4071:26:8",
															"nodeType": "YulAssignment",
															"src": "4071:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4083:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4083:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4094:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4094:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4079:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4079:3:8"
																},
																"nativeSrc": "4079:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4079:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4071:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4071:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3757:346:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3908:9:8",
														"nodeType": "YulTypedName",
														"src": "3908:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3922:4:8",
														"nodeType": "YulTypedName",
														"src": "3922:4:8",
														"type": ""
													}
												],
												"src": "3757:346:8"
											},
											{
												"body": {
													"nativeSrc": "4282:181:8",
													"nodeType": "YulBlock",
													"src": "4282:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4299:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4299:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4310:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4310:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:8"
																},
																"nativeSrc": "4292:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4292:21:8"
															},
															"nativeSrc": "4292:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4292:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4333:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4333:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4344:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4344:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4329:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4329:3:8"
																		},
																		"nativeSrc": "4329:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4329:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4349:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4349:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4322:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:8"
																},
																"nativeSrc": "4322:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4322:30:8"
															},
															"nativeSrc": "4322:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4322:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4372:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4372:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4383:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4383:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:8"
																		},
																		"nativeSrc": "4368:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:18:8"
																	},
																	{
																		"hexValue": "4d696e74696e6720776f756c6420657863656564206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "4388:33:8",
																		"nodeType": "YulLiteral",
																		"src": "4388:33:8",
																		"type": "",
																		"value": "Minting would exceed max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4361:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:8"
																},
																"nativeSrc": "4361:61:8",
																"nodeType": "YulFunctionCall",
																"src": "4361:61:8"
															},
															"nativeSrc": "4361:61:8",
															"nodeType": "YulExpressionStatement",
															"src": "4361:61:8"
														},
														{
															"nativeSrc": "4431:26:8",
															"nodeType": "YulAssignment",
															"src": "4431:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4443:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4443:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4454:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4454:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4439:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4439:3:8"
																},
																"nativeSrc": "4439:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4439:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4431:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4431:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_787cfce62952f8e769386983f80bd129e75108362ed0e852155d2ee244277933__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4108:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4259:9:8",
														"nodeType": "YulTypedName",
														"src": "4259:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4273:4:8",
														"nodeType": "YulTypedName",
														"src": "4273:4:8",
														"type": ""
													}
												],
												"src": "4108:355:8"
											},
											{
												"body": {
													"nativeSrc": "4500:95:8",
													"nodeType": "YulBlock",
													"src": "4500:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4517:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4517:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4524:3:8",
																				"nodeType": "YulLiteral",
																				"src": "4524:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4529:10:8",
																				"nodeType": "YulLiteral",
																				"src": "4529:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:8"
																		},
																		"nativeSrc": "4520:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4520:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4510:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4510:6:8"
																},
																"nativeSrc": "4510:31:8",
																"nodeType": "YulFunctionCall",
																"src": "4510:31:8"
															},
															"nativeSrc": "4510:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "4510:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4557:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4557:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4560:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4560:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4550:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4550:6:8"
																},
																"nativeSrc": "4550:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4550:15:8"
															},
															"nativeSrc": "4550:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4550:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4581:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4581:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4584:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4584:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4574:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4574:6:8"
																},
																"nativeSrc": "4574:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4574:15:8"
															},
															"nativeSrc": "4574:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4574:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4468:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4468:127:8"
											},
											{
												"body": {
													"nativeSrc": "4774:228:8",
													"nodeType": "YulBlock",
													"src": "4774:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4791:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4802:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4802:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4784:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4784:6:8"
																},
																"nativeSrc": "4784:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4784:21:8"
															},
															"nativeSrc": "4784:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4784:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4825:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4836:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4836:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4821:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:8"
																		},
																		"nativeSrc": "4821:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4821:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4841:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4841:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:8"
																},
																"nativeSrc": "4814:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4814:30:8"
															},
															"nativeSrc": "4814:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4814:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4864:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4864:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4875:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4875:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4860:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:8"
																		},
																		"nativeSrc": "4860:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4860:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "4880:34:8",
																		"nodeType": "YulLiteral",
																		"src": "4880:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:8"
																},
																"nativeSrc": "4853:62:8",
																"nodeType": "YulFunctionCall",
																"src": "4853:62:8"
															},
															"nativeSrc": "4853:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "4853:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4935:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4946:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4946:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4931:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:8"
																		},
																		"nativeSrc": "4931:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4931:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "4951:8:8",
																		"nodeType": "YulLiteral",
																		"src": "4951:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4924:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:8"
																},
																"nativeSrc": "4924:36:8",
																"nodeType": "YulFunctionCall",
																"src": "4924:36:8"
															},
															"nativeSrc": "4924:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "4924:36:8"
														},
														{
															"nativeSrc": "4969:27:8",
															"nodeType": "YulAssignment",
															"src": "4969:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4981:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4981:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4992:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4992:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4977:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4977:3:8"
																},
																"nativeSrc": "4977:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4977:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4969:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4969:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4600:402:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4751:9:8",
														"nodeType": "YulTypedName",
														"src": "4751:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4765:4:8",
														"nodeType": "YulTypedName",
														"src": "4765:4:8",
														"type": ""
													}
												],
												"src": "4600:402:8"
											},
											{
												"body": {
													"nativeSrc": "5181:166:8",
													"nodeType": "YulBlock",
													"src": "5181:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5198:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5198:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5209:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5209:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5191:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5191:6:8"
																},
																"nativeSrc": "5191:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5191:21:8"
															},
															"nativeSrc": "5191:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5191:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5232:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5232:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5243:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5243:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5228:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5228:3:8"
																		},
																		"nativeSrc": "5228:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5228:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5248:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5221:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5221:6:8"
																},
																"nativeSrc": "5221:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5221:30:8"
															},
															"nativeSrc": "5221:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5221:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5271:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5271:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5282:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5282:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5267:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5267:3:8"
																		},
																		"nativeSrc": "5267:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5267:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "5287:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5287:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5260:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5260:6:8"
																},
																"nativeSrc": "5260:46:8",
																"nodeType": "YulFunctionCall",
																"src": "5260:46:8"
															},
															"nativeSrc": "5260:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "5260:46:8"
														},
														{
															"nativeSrc": "5315:26:8",
															"nodeType": "YulAssignment",
															"src": "5315:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5327:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5327:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5338:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5323:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5323:3:8"
																},
																"nativeSrc": "5323:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5323:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5315:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5315:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5007:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5158:9:8",
														"nodeType": "YulTypedName",
														"src": "5158:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5172:4:8",
														"nodeType": "YulTypedName",
														"src": "5172:4:8",
														"type": ""
													}
												],
												"src": "5007:340:8"
											},
											{
												"body": {
													"nativeSrc": "5526:182:8",
													"nodeType": "YulBlock",
													"src": "5526:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5543:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5554:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5554:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5536:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5536:6:8"
																},
																"nativeSrc": "5536:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5536:21:8"
															},
															"nativeSrc": "5536:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5536:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5577:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5577:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5588:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5588:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5573:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5573:3:8"
																		},
																		"nativeSrc": "5573:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5573:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5593:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5593:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5566:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:8"
																},
																"nativeSrc": "5566:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5566:30:8"
															},
															"nativeSrc": "5566:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5566:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5616:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5616:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5627:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5627:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5612:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5612:3:8"
																		},
																		"nativeSrc": "5612:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5612:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "5632:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5632:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5605:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:8"
																},
																"nativeSrc": "5605:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5605:62:8"
															},
															"nativeSrc": "5605:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "5605:62:8"
														},
														{
															"nativeSrc": "5676:26:8",
															"nodeType": "YulAssignment",
															"src": "5676:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5688:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5688:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5699:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5684:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:8"
																},
																"nativeSrc": "5684:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5684:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5676:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5676:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5352:356:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5503:9:8",
														"nodeType": "YulTypedName",
														"src": "5503:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5517:4:8",
														"nodeType": "YulTypedName",
														"src": "5517:4:8",
														"type": ""
													}
												],
												"src": "5352:356:8"
											},
											{
												"body": {
													"nativeSrc": "5870:188:8",
													"nodeType": "YulBlock",
													"src": "5870:188:8",
													"statements": [
														{
															"nativeSrc": "5880:26:8",
															"nodeType": "YulAssignment",
															"src": "5880:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5892:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5892:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5903:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5903:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5888:3:8"
																},
																"nativeSrc": "5888:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5888:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5880:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5880:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5922:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5922:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5937:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5937:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5953:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5953:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5958:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5958:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5949:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5949:3:8"
																						},
																						"nativeSrc": "5949:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5949:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5962:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5962:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5945:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5945:3:8"
																				},
																				"nativeSrc": "5945:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5945:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5933:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5933:3:8"
																		},
																		"nativeSrc": "5933:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5933:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5915:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:8"
																},
																"nativeSrc": "5915:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5915:51:8"
															},
															"nativeSrc": "5915:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5915:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5986:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5986:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5997:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5997:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5982:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5982:3:8"
																		},
																		"nativeSrc": "5982:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5982:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6002:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6002:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5975:6:8"
																},
																"nativeSrc": "5975:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5975:34:8"
															},
															"nativeSrc": "5975:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5975:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6029:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6029:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6040:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6040:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6025:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6025:3:8"
																		},
																		"nativeSrc": "6025:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6025:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6045:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6045:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6018:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6018:6:8"
																},
																"nativeSrc": "6018:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6018:34:8"
															},
															"nativeSrc": "6018:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6018:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5713:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5823:9:8",
														"nodeType": "YulTypedName",
														"src": "5823:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5834:6:8",
														"nodeType": "YulTypedName",
														"src": "5834:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5842:6:8",
														"nodeType": "YulTypedName",
														"src": "5842:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5850:6:8",
														"nodeType": "YulTypedName",
														"src": "5850:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5861:4:8",
														"nodeType": "YulTypedName",
														"src": "5861:4:8",
														"type": ""
													}
												],
												"src": "5713:345:8"
											},
											{
												"body": {
													"nativeSrc": "6237:170:8",
													"nodeType": "YulBlock",
													"src": "6237:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6254:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6254:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6265:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6265:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6247:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6247:6:8"
																},
																"nativeSrc": "6247:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6247:21:8"
															},
															"nativeSrc": "6247:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6247:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6288:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6288:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6299:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6299:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6284:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6284:3:8"
																		},
																		"nativeSrc": "6284:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6284:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6304:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6304:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6277:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6277:6:8"
																},
																"nativeSrc": "6277:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6277:30:8"
															},
															"nativeSrc": "6277:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6277:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6327:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6327:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6338:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6338:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6323:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:8"
																		},
																		"nativeSrc": "6323:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "6343:22:8",
																		"nodeType": "YulLiteral",
																		"src": "6343:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6316:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6316:6:8"
																},
																"nativeSrc": "6316:50:8",
																"nodeType": "YulFunctionCall",
																"src": "6316:50:8"
															},
															"nativeSrc": "6316:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "6316:50:8"
														},
														{
															"nativeSrc": "6375:26:8",
															"nodeType": "YulAssignment",
															"src": "6375:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6387:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6387:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6398:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6398:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6383:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:3:8"
																},
																"nativeSrc": "6383:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6383:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6375:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6375:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6063:344:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6214:9:8",
														"nodeType": "YulTypedName",
														"src": "6214:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6228:4:8",
														"nodeType": "YulTypedName",
														"src": "6228:4:8",
														"type": ""
													}
												],
												"src": "6063:344:8"
											},
											{
												"body": {
													"nativeSrc": "6460:174:8",
													"nodeType": "YulBlock",
													"src": "6460:174:8",
													"statements": [
														{
															"nativeSrc": "6470:16:8",
															"nodeType": "YulAssignment",
															"src": "6470:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6481:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6481:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6484:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6484:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6477:3:8"
																},
																"nativeSrc": "6477:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6477:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6470:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6470:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6517:111:8",
																"nodeType": "YulBlock",
																"src": "6517:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6538:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6538:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6545:3:8",
																							"nodeType": "YulLiteral",
																							"src": "6545:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6550:10:8",
																							"nodeType": "YulLiteral",
																							"src": "6550:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6541:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6541:3:8"
																					},
																					"nativeSrc": "6541:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6541:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6531:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6531:6:8"
																			},
																			"nativeSrc": "6531:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6531:31:8"
																		},
																		"nativeSrc": "6531:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6531:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6582:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6582:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6585:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6585:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6575:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6575:6:8"
																			},
																			"nativeSrc": "6575:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6575:15:8"
																		},
																		"nativeSrc": "6575:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6575:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6610:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6610:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6613:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6613:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6603:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6603:6:8"
																			},
																			"nativeSrc": "6603:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6603:15:8"
																		},
																		"nativeSrc": "6603:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6603:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6501:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6501:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6504:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6504:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6498:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6498:2:8"
																},
																"nativeSrc": "6498:10:8",
																"nodeType": "YulFunctionCall",
																"src": "6498:10:8"
															},
															"nativeSrc": "6495:133:8",
															"nodeType": "YulIf",
															"src": "6495:133:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6412:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6443:1:8",
														"nodeType": "YulTypedName",
														"src": "6443:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6446:1:8",
														"nodeType": "YulTypedName",
														"src": "6446:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6452:3:8",
														"nodeType": "YulTypedName",
														"src": "6452:3:8",
														"type": ""
													}
												],
												"src": "6412:222:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Address is blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_787cfce62952f8e769386983f80bd129e75108362ed0e852155d2ee244277933__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Minting would exceed max supply\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xF76F8D78 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x363 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xEB91E651 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xEF2AF922 EQ PUSH2 0x32A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x2CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x726B5771 EQ PUSH2 0x258 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1E6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x179 PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0xDE9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A2 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x4C8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EE PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x4DA JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x211 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9B JUMP JUMPDEST PUSH2 0x556 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1A2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x563 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xED2 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x631 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x179 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x179 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4D454D45 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE39 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0x1B6 PUSH12 0x6765C793FA10079D0000000 DUP2 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0xED2 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x394 SWAP1 PUSH2 0xF74 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C0 SWAP1 PUSH2 0xF74 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x40B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x40B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x422 DUP2 DUP6 DUP6 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x4AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x4B3 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x4BE DUP7 DUP7 DUP7 PUSH2 0x8F3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4D0 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x970 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0x916 JUMP JUMPDEST PUSH12 0x6765C793FA10079D0000000 DUP2 PUSH2 0x4F9 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST ADD GT ISZERO PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720776F756C6420657863656564206D617820737570706C7900 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x552 DUP3 DUP3 PUSH2 0x9C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x560 CALLER DUP3 PUSH2 0x9F9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x56B PUSH2 0x916 JUMP JUMPDEST PUSH2 0x4D8 PUSH0 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x57C PUSH2 0x916 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x6 PUSH0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x59B JUMPI PUSH2 0x59B PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x624 JUMPI PUSH1 0x1 PUSH1 0x6 PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x5E7 JUMPI PUSH2 0x5E7 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x57E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x639 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x394 SWAP1 PUSH2 0xF74 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x682 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x468 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x6CE DUP6 DUP6 PUSH2 0xAC1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x560 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x727 PUSH2 0x916 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x6 PUSH0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x746 JUMPI PUSH2 0x746 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7CF JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x792 JUMPI PUSH2 0x792 PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x729 JUMP JUMPDEST PUSH2 0x7DF PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x560 DUP2 PUSH2 0xA2D JUMP JUMPDEST PUSH2 0x855 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x560 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x62C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x900 DUP6 DUP3 DUP6 PUSH2 0xBA1 JUMP JUMPDEST PUSH2 0x90B DUP6 DUP6 DUP6 PUSH2 0xC16 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x978 PUSH2 0xC73 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x552 PUSH0 DUP4 DUP4 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA22 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x552 DUP3 PUSH0 DUP4 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA86 PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x9A8 CALLER SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x422 DUP2 DUP6 DUP6 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB9B JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB92 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0xB9B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0xB9B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC68 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x468 JUMP JUMPDEST PUSH2 0x62C DUP4 DUP4 DUP4 PUSH2 0xCC3 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCED JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xD5D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD79 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDDC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE34 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE53 DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE73 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE7C DUP5 PUSH2 0xE1E JUMP JUMPDEST SWAP3 POP PUSH2 0xE8A PUSH1 0x20 DUP6 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xECB DUP3 PUSH2 0xE1E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xF09 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0xF33 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF54 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF5D DUP4 PUSH2 0xE1E JUMP JUMPDEST SWAP2 POP PUSH2 0xF6B PUSH1 0x20 DUP5 ADD PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF88 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFA6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1059191C995CDCC81A5CC8189B1858DADB1A5CDD1959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x428 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xF7 DIV 0x4E JUMP PUSH32 0xC427A039A594FACD60F5EA619A4D59A9EFAEEF072C22C15ABD3764736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "230:2716:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:8;;1078:22;1060:41;;1048:2;1033:18;4293:186:3;920:187:8;3144:97:3;3222:12;;3144:97;;;1258:25:8;;;1246:2;1231:18;3144:97:3;1112:177:8;2535:270:7;;;;;;:::i;:::-;;:::i;3002:82:3:-;;;3075:2;1815:36:8;;1803:2;1788:18;3002:82:3;1673:184:8;1133:65:7;;;:::i;:::-;;779:231;;;;;;:::i;:::-;;:::i;650:83::-;;;;;;:::i;:::-;;:::i;1615:84:2:-;1685:7;;-1:-1:-1;;;1685:7:2;;;;1615:84;;3299:116:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:3;3364:7;3390:18;;;;;;;;;;;;3299:116;1824:101:0;;;:::i;1663:261:7:-;;;;;;:::i;:::-;;:::i;1064:61::-;;;:::i;1201:85:0:-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:0;;;3045:51:8;;3033:2;3018:18;1201:85:0;2899:203:8;2276:93:3;;;:::i;344:36:7:-;;;;;;;;;;;;;;;-1:-1:-1;;;344:36:7;;;;;2279:248;;;;;;:::i;:::-;;:::i;282:55::-;;318:19;282:55;;3846:140:3;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:3;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;1447:162:7;;;;;;:::i;:::-;;:::i;1932:267::-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;1283:156:7:-;;;;;;:::i;:::-;;:::i;434:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;719:10:6;4420:31:3;719:10:6;4436:7:3;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;2535:270:7:-;-1:-1:-1;;;;;2874:22:7;;2732:4;2874:22;;;:13;:22;;;;;;2657:4;;2874:22;;2873:23;2865:58;;;;-1:-1:-1;;;2865:58:7;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2874:22:7;::::1;;::::0;;;:13:::1;:22;::::0;;;;;2687:2;;2874:22:::1;;2873:23;2865:58;;;;-1:-1:-1::0;;;2865:58:7::1;;;;;;;:::i;:::-;1239:19:2::2;:17;:19::i;:::-;2761:36:7::3;2780:4;2786:2;2790:6;2761:18;:36::i;:::-;2754:43:::0;2535:270;-1:-1:-1;;;;;;2535:270:7:o;1133:65::-;1094:13:0;:11;:13::i;:::-;1180:10:7::1;:8;:10::i;:::-;1133:65::o:0;779:231::-;1094:13:0;:11;:13::i;:::-;318:19:7::1;903:6;887:13;3222:12:3::0;;;3144:97;887:13:7::1;:22;:35;;879:79;;;::::0;-1:-1:-1;;;879:79:7;;4310:2:8;879:79:7::1;::::0;::::1;4292:21:8::0;4349:2;4329:18;;;4322:30;4388:33;4368:18;;;4361:61;4439:18;;879:79:7::1;4108:355:8::0;879:79:7::1;980:22;986:7;995:6;980:5;:22::i;:::-;779:231:::0;;:::o;650:83::-;698:27;719:10:6;718:6:7;698:5;:27::i;:::-;650:83;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;1663:261:7:-:0;1094:13:0;:11;:13::i;:::-;1749:9:7::1;1744:173;1764:19:::0;;::::1;1744:173;;;1810:13;:26;1824:8;;1833:1;1824:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1810:26:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;1810:26:7;;::::1;;1805:101;;1886:4;1857:13;:26;1871:8;;1880:1;1871:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1857:26:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;1857:26:7;:33;;-1:-1:-1;;1857:33:7::1;::::0;::::1;;::::0;;;::::1;::::0;;1805:101:::1;1785:3;;1744:173;;;;1663:261:::0;;:::o;1064:61::-;1094:13:0;:11;:13::i;:::-;1109:8:7::1;:6;:8::i;2276:93:3:-:0;2323:13;2355:7;2348:14;;;;;:::i;2279:248:7:-;2383:10;2464:4;2874:22;;;:13;:22;;;;;;2464:4;;2383:10;2874:22;;2873:23;2865:58;;;;-1:-1:-1;;;2865:58:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;2874:22:7;::::1;;::::0;;;:13:::1;:22;::::0;;;;;2419:2;;2874:22:::1;;2873:23;2865:58;;;;-1:-1:-1::0;;;2865:58:7::1;;;;;;;:::i;:::-;1239:19:2::2;:17;:19::i;:::-;2493:26:7::3;2508:2;2512:6;2493:14;:26::i;:::-;2486:33:::0;2279:248;-1:-1:-1;;;;;2279:248:7:o;1447:162::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1521:22:7;::::1;;::::0;;;:13:::1;:22;::::0;;;;;::::1;;1517:85;;;-1:-1:-1::0;;;;;1560:22:7::1;1585:5;1560:22:::0;;;:13:::1;:22;::::0;;;;:30;;-1:-1:-1;;1560:30:7::1;::::0;;1447:162::o;1932:267::-;1094:13:0;:11;:13::i;:::-;2024:9:7::1;2019:173;2039:19:::0;;::::1;2019:173;;;2084:13;:26;2098:8;;2107:1;2098:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2084:26:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2084:26:7;;::::1;;2080:101;;;2160:5;2131:13;:26;2145:8;;2154:1;2145:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2131:26:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;2131:26:7;:34;;-1:-1:-1;;2131:34:7::1;::::0;::::1;;::::0;;;::::1;::::0;;2080:101:::1;2060:3;;2019:173;;2074:198:0::0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;4802:2:8;2154:73:0::1;::::0;::::1;4784:21:8::0;4841:2;4821:18;;;4814:30;4880:34;4860:18;;;4853:62;-1:-1:-1;;;4931:18:8;;;4924:36;4977:19;;2154:73:0::1;4600:402:8::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;1283:156:7:-:0;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1352:22:7;::::1;;::::0;;;:13:::1;:22;::::0;;;;;::::1;;1347:85;;-1:-1:-1::0;;;;;1391:22:7;::::1;;::::0;;;:13:::1;:22;::::0;;;;:29;;-1:-1:-1;;1391:29:7::1;1416:4;1391:29;::::0;;1283:156;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;1767:106:2:-;1685:7;;-1:-1:-1;;;1685:7:2;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:2;;5209:2:8;1828:38:2;;;5191:21:8;5248:2;5228:18;;;5221:30;-1:-1:-1;;;5267:18:8;;;5260:46;5323:18;;1828:38:2;5007:340:8;5039:244:3;5126:4;719:10:6;5182:37:3;5198:4;719:10:6;5213:5:3;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:3;;5039:244;-1:-1:-1;;;;5039:244:3:o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5554:2:8;1414:68:0;;;5536:21:8;;;5573:18;;;5566:30;5632:34;5612:18;;;5605:62;5684:18;;1414:68:0;5352:356:8;2433:117:2;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;;;2491:15:2::1;::::0;;2521:22:::1;719:10:6::0;2530:12:2::1;2521:22;::::0;-1:-1:-1;;;;;3063:32:8;;;3045:51;;3033:2;3018:18;2521:22:2::1;;;;;;;2433:117::o:0;7721:208:3:-;-1:-1:-1;;;;;7791:21:3;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:3;;7864:1;7835:32;;;3045:51:8;3018:18;;7835:32:3;2899:203:8;7787:91:3;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;8247:206::-;-1:-1:-1;;;;;8317:21:3;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:3;;8388:1;8361:30;;;3045:51:8;3018:18;;8361:30:3;2899:203:8;8313:89:3;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;;;2245:14:2::1;-1:-1:-1::0;;;2245:14:2::1;::::0;;2274:20:::1;2281:12;719:10:6::0;;640:96;3610:178:3;3679:4;719:10:6;3733:27:3;719:10:6;3750:2:3;3754:5;3733:9;:27::i;9949:432::-;-1:-1:-1;;;;;10061:19:3;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:3;;10132:1;10103:32;;;3045:51:8;3018:18;;10103:32:3;2899:203:8;10057:89:3;-1:-1:-1;;;;;10159:21:3;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:3;;10231:1;10203:31;;;3045:51:8;3018:18;;10203:31:3;2899:203:8;10155:90:3;-1:-1:-1;;;;;10254:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:3;10342:5;-1:-1:-1;;;;;10333:31:3;;10358:5;10333:31;;;;1258:25:8;;1246:2;1231:18;;1112:177;10333:31:3;;;;;;;;10299:76;9949:432;;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:3;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:3;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:3;;-1:-1:-1;;;;;5933:32:8;;10936:60:3;;;5915:51:8;5982:18;;;5975:34;;;6025:18;;;6018:34;;;5888:18;;10936:60:3;5713:345:8;10881:130:3;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:3;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:3;;5807:1;5780:30;;;3045:51:8;3018:18;;5780:30:3;2899:203:8;5735:86:3;-1:-1:-1;;;;;5834:16:3;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:3;;5902:1;5873:32;;;3045:51:8;3018:18;;5873:32:3;2899:203:8;5830:86:3;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1945:106:2:-;1685:7;;-1:-1:-1;;;1685:7:2;;;;2003:41;;;;-1:-1:-1;;;2003:41:2;;6265:2:8;2003:41:2;;;6247:21:8;6304:2;6284:18;;;6277:30;-1:-1:-1;;;6323:18:8;;;6316:50;6383:18;;2003:41:2;6063:344:8;6271:1107:3;-1:-1:-1;;;;;6360:18:3;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:3;;-1:-1:-1;6356:540:3;;-1:-1:-1;;;;;6570:15:3;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:3;;-1:-1:-1;;;;;5933:32:8;;6649:50:3;;;5915:51:8;5982:18;;;5975:34;;;6025:18;;;6018:34;;;5888:18;;6649:50:3;5713:345:8;6599:115:3;-1:-1:-1;;;;;6834:15:3;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:3;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:3;7355:4;-1:-1:-1;;;;;7346:25:3;;7365:5;7346:25;;;;1258::8;;1246:2;1231:18;;1112:177;7346:25:3;;;;;;;;6271:1107;;;:::o;14:418:8:-;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:8;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:8:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:8;1619:18;;;;1606:32;;1294:374::o;1862:226::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;-1:-1:-1;2035:23:8;;1862:226;-1:-1:-1;1862:226:8:o;2093:186::-;2152:6;2205:2;2193:9;2184:7;2180:23;2176:32;2173:52;;;2221:1;2218;2211:12;2173:52;2244:29;2263:9;2244:29;:::i;:::-;2234:39;2093:186;-1:-1:-1;;;2093:186:8:o;2284:610::-;2370:6;2378;2431:2;2419:9;2410:7;2406:23;2402:32;2399:52;;;2447:1;2444;2437:12;2399:52;2487:9;2474:23;2520:18;2512:6;2509:30;2506:50;;;2552:1;2549;2542:12;2506:50;2575:22;;2628:4;2620:13;;2616:27;-1:-1:-1;2606:55:8;;2657:1;2654;2647:12;2606:55;2697:2;2684:16;2723:18;2715:6;2712:30;2709:50;;;2755:1;2752;2745:12;2709:50;2808:7;2803:2;2793:6;2790:1;2786:14;2782:2;2778:23;2774:32;2771:45;2768:65;;;2829:1;2826;2819:12;2768:65;2860:2;2852:11;;;;;2882:6;;-1:-1:-1;2284:610:8;-1:-1:-1;;;2284:610:8:o;3107:260::-;3175:6;3183;3236:2;3224:9;3215:7;3211:23;3207:32;3204:52;;;3252:1;3249;3242:12;3204:52;3275:29;3294:9;3275:29;:::i;:::-;3265:39;;3323:38;3357:2;3346:9;3342:18;3323:38;:::i;:::-;3313:48;;3107:260;;;;;:::o;3372:380::-;3451:1;3447:12;;;;3494;;;3515:61;;3569:4;3561:6;3557:17;3547:27;;3515:61;3622:2;3614:6;3611:14;3591:18;3588:38;3585:161;;3668:10;3663:3;3659:20;3656:1;3649:31;3703:4;3700:1;3693:15;3731:4;3728:1;3721:15;3585:161;;3372:380;;;:::o;3757:346::-;3959:2;3941:21;;;3998:2;3978:18;;;3971:30;-1:-1:-1;;;4032:2:8;4017:18;;4010:52;4094:2;4079:18;;3757:346::o;4468:127::-;4529:10;4524:3;4520:20;4517:1;4510:31;4560:4;4557:1;4550:15;4584:4;4581:1;4574:15;6412:222;6477:9;;;6498:10;;;6495:133;;;6550:10;6545:3;6541:20;6538:1;6531:31;6585:4;6582:1;6575:15;6613:4;6610:1;6603:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "833000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"NAME()": "infinite",
								"SYMBOL()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2626",
								"blacklist(address)": "29072",
								"blacklistBatch(address[])": "infinite",
								"burn(uint256)": "50961",
								"decimals()": "288",
								"isBlacklisted(address)": "2638",
								"maxSupply()": "327",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2345",
								"pause()": "infinite",
								"paused()": "2387",
								"removeBlacklist(address)": "29043",
								"removeBlacklistBatch(address[])": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "57959",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28377",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 230,
									"end": 2946,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 488,
									"end": 625,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 488,
									"end": 625,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 488,
									"end": 625,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 488,
									"end": 625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 488,
									"end": 625,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 488,
									"end": 625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 488,
									"end": 625,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 488,
									"end": 625,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 488,
									"end": 625,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 488,
									"end": 625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 508,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D454D45"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 508,
									"end": 512,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 514,
									"end": 520,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 508,
									"end": 512,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 508,
									"end": 512,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 543,
									"end": 581,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 549,
									"end": 559,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 561,
									"end": 580,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 543,
									"end": 548,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 543,
									"end": 581,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 543,
									"end": 581,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 543,
									"end": 581,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2801,
									"end": 2852,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2774,
									"end": 2792,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3310,
									"end": 3342,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3310,
									"end": 3342,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3292,
									"end": 3343,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3386,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3386,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3352,
									"end": 3386,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3402,
									"end": 3420,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 3402,
									"end": 3420,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3402,
									"end": 3420,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3429,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3429,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3429,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 3265,
									"end": 3283,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 3090,
									"end": 3435,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3586,
									"end": 3611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3611,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3576,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3559,
									"end": 3577,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3559,
									"end": 3577,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3440,
									"end": 3617,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1351,
									"end": 2650,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1701,
									"end": 1705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1735,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2438,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2506,
									"end": 2525,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2500,
									"end": 2526,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 2451,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2634,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1714,
									"end": 2644,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1744,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1780,
									"end": 1800,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1912,
									"end": 1919,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1910,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1906,
									"end": 1920,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1988,
									"end": 2014,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1973,
									"end": 2015,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2105,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2086,
									"end": 2106,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2042,
									"end": 2056,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1898,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1902,
									"end": 1905,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2139,
									"end": 2146,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2136,
									"end": 2155,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2228,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2203,
									"end": 2229,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2288,
									"end": 2302,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2304,
									"end": 2307,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 2284,
									"end": 2308,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2280,
									"end": 2317,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2276,
									"end": 2318,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2261,
									"end": 2319,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2320,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2133,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2380,
									"end": 2381,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2364,
									"end": 2378,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2360,
									"end": 2382,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2347,
									"end": 2383,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1351,
									"end": 2650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2928,
									"end": 2937,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2928,
									"end": 2937,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2928,
									"end": 2937,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2959,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2959,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2959,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3001,
									"end": 3011,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2996,
									"end": 2999,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2992,
									"end": 3012,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2989,
									"end": 2990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2982,
									"end": 3013,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3036,
									"end": 3040,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 3033,
									"end": 3034,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3026,
									"end": 3041,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3064,
									"end": 3068,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3061,
									"end": 3062,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3054,
									"end": 3069,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 2946,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 3085,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 3085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3440,
									"end": 3617,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 3440,
									"end": 3617,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 230,
									"end": 2946,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e0f7044e567fc427a039a594facd60f5ea619a4d59a9efaeef072c22c15abd3764736f6c634300081b0033",
									".code": [
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "F76F8D78"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "F9F92BE4"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "FE575A87"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "EB91E651"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "EF2AF922"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "A3F4DF7E"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "D5ABEB01"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "726B5771"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 2946,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 2535,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2535,
											"end": 2805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1133,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 779,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 779,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 650,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 650,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 650,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 650,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 650,
											"end": 733,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 650,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 650,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 650,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 650,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 650,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 650,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1663,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1663,
											"end": 1924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1064,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1064,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1064,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2899,
											"end": 3102,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 344,
											"end": 380,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 344,
											"end": 380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 344,
											"end": 380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 380,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 344,
											"end": 380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D454D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 344,
											"end": 380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 344,
											"end": 380,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2279,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2279,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 282,
											"end": 337,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 282,
											"end": 337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 282,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 318,
											"end": 337,
											"name": "PUSH",
											"source": 7,
											"value": "6765C793FA10079D0000000"
										},
										{
											"begin": 282,
											"end": 337,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 282,
											"end": 337,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1447,
											"end": 1609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1447,
											"end": 1609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1932,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1932,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1283,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1283,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 434,
											"end": 479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 434,
											"end": 479,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 434,
											"end": 479,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2732,
											"end": 2736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2661,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2896,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2865,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2689,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2896,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2865,
											"end": 2923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2780,
											"end": 2784,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2788,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2796,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2779,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2761,
											"end": 2797,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2761,
											"end": 2797,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2754,
											"end": 2797,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2805,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1133,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1180,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1180,
											"end": 1190,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1190,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1180,
											"end": 1190,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 318,
											"end": 337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6765C793FA10079D0000000"
										},
										{
											"begin": 903,
											"end": 909,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 887,
											"end": 900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 887,
											"end": 900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 887,
											"end": 909,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 887,
											"end": 922,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 887,
											"end": 922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 879,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 879,
											"end": 958,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 879,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 958,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 879,
											"end": 958,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 879,
											"end": 958,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4310,
											"end": 4312,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 879,
											"end": 958,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 879,
											"end": 958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4313,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4349,
											"end": 4351,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4329,
											"end": 4347,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4329,
											"end": 4347,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4347,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4322,
											"end": 4352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4388,
											"end": 4421,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E74696E6720776F756C6420657863656564206D617820737570706C7900"
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4368,
											"end": 4386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4422,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 879,
											"end": 958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4108,
											"end": 4463,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 879,
											"end": 958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 879,
											"end": 958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 980,
											"end": 1002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 986,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 995,
											"end": 1001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 980,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 980,
											"end": 1002,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 980,
											"end": 1002,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 980,
											"end": 1002,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 779,
											"end": 1010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 650,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 650,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 718,
											"end": 724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 698,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 698,
											"end": 725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 698,
											"end": 725,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 698,
											"end": 725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 650,
											"end": 733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 650,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1783,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1783,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1810,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1832,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1834,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1824,
											"end": 1835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1824,
											"end": 1835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 1824,
											"end": 1835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1810,
											"end": 1836,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1810,
											"end": 1836,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1805,
											"end": 1906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1886,
											"end": 1890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1857,
											"end": 1870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1857,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1871,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1879,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 1881,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1871,
											"end": 1882,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1871,
											"end": 1882,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1871,
											"end": 1882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 1883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1883,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 1890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1890,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1805,
											"end": 1906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1785,
											"end": 1788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1917,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1064,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1064,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1109,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1109,
											"end": 1117,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2393,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2887,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2464,
											"end": 2468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2896,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2865,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2865,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2874,
											"end": 2896,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2896,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2865,
											"end": 2923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2865,
											"end": 2923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2519,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2508,
											"end": 2510,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2518,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2507,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2493,
											"end": 2519,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2493,
											"end": 2519,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2493,
											"end": 2519,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2519,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2527,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2279,
											"end": 2527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 1447,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1521,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1521,
											"end": 1543,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1602,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1517,
											"end": 1602,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1560,
											"end": 1582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1590,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1590,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1590,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1447,
											"end": 1609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1932,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2192,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2019,
											"end": 2192,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2058,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2058,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2192,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2019,
											"end": 2192,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2084,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2107,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2098,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2098,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2098,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2084,
											"end": 2110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2084,
											"end": 2110,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2181,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2080,
											"end": 2181,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2131,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2153,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2153,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2155,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 2145,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 2145,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 2145,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2157,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2157,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2080,
											"end": 2181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2060,
											"end": 2063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2060,
											"end": 2063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2019,
											"end": 2192,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4784,
											"end": 4805,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4841,
											"end": 4843,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4844,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4880,
											"end": 4914,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4878,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4977,
											"end": 4996,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4977,
											"end": 4996,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4600,
											"end": 5002,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1352,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1347,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1347,
											"end": 1432,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1413,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1391,
											"end": 1413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1413,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1420,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1420,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1391,
											"end": 1420,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1420,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1420,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5191,
											"end": 5212,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5248,
											"end": 5250,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5228,
											"end": 5246,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5251,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5285,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5260,
											"end": 5306,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5007,
											"end": 5347,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5554,
											"end": 5556,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5573,
											"end": 5591,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5573,
											"end": 5591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5573,
											"end": 5591,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5566,
											"end": 5596,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5666,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5667,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5352,
											"end": 5708,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3095,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3063,
											"end": 3095,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2899,
											"end": 3102,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2899,
											"end": 3102,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2899,
											"end": 3102,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2899,
											"end": 3102,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 5966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6052,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6052,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 5906,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5888,
											"end": 5906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5713,
											"end": 6058,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2899,
											"end": 3102,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2899,
											"end": 3102,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6265,
											"end": 6267,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6247,
											"end": 6268,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6306,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6284,
											"end": 6302,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6284,
											"end": 6302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6284,
											"end": 6302,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6316,
											"end": 6366,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6383,
											"end": 6401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 6063,
											"end": 6407,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5933,
											"end": 5965,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 5966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5975,
											"end": 6009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6052,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6018,
											"end": 6052,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5888,
											"end": 5906,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5888,
											"end": 5906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 5713,
											"end": 6058,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2058,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1862,
											"end": 2088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2203,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2244,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2234,
											"end": 2273,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2284,
											"end": 2894,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2284,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2433,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2419,
											"end": 2428,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2429,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2402,
											"end": 2434,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2451,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2399,
											"end": 2451,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2451,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2399,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2497,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2520,
											"end": 2538,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2509,
											"end": 2539,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2506,
											"end": 2556,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2506,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2506,
											"end": 2556,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2554,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2506,
											"end": 2556,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2506,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2620,
											"end": 2633,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2616,
											"end": 2643,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2606,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2606,
											"end": 2661,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2659,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2661,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2606,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2684,
											"end": 2700,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2723,
											"end": 2741,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2759,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2709,
											"end": 2759,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2757,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2759,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2709,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 2815,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2803,
											"end": 2805,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2786,
											"end": 2800,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2782,
											"end": 2784,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2778,
											"end": 2801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2774,
											"end": 2806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2816,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2833,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2768,
											"end": 2833,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2831,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2833,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2768,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2863,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2863,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2863,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2863,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2894,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2284,
											"end": 2894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3367,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3107,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3183,
											"end": 3189,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3233,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3215,
											"end": 3222,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3211,
											"end": 3234,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3239,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3256,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 3204,
											"end": 3256,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3252,
											"end": 3253,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3249,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3256,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 3204,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 3294,
											"end": 3303,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3275,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3304,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 3275,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3304,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3323,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3361,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3323,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3361,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3367,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3367,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3107,
											"end": 3367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3752,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3372,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3451,
											"end": 3452,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3447,
											"end": 3459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3459,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3459,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 3447,
											"end": 3459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3506,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3506,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3494,
											"end": 3506,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3515,
											"end": 3576,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3569,
											"end": 3573,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 3561,
											"end": 3567,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3574,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3547,
											"end": 3574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3515,
											"end": 3576,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3515,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3625,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3626,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 3585,
											"end": 3746,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3668,
											"end": 3678,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3663,
											"end": 3666,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3659,
											"end": 3679,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3680,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3728,
											"end": 3729,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3721,
											"end": 3736,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3746,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 3585,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3752,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3372,
											"end": 3752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 4103,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3757,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3961,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3962,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3962,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3962,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3998,
											"end": 4000,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3978,
											"end": 3996,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 4001,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1059191C995CDCC81A5CC8189B1858DADB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4032,
											"end": 4034,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4017,
											"end": 4035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4010,
											"end": 4062,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4096,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 4103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4595,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 4468,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4529,
											"end": 4539,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 4520,
											"end": 4540,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4541,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4560,
											"end": 4564,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 4557,
											"end": 4558,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4550,
											"end": 4565,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4584,
											"end": 4588,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4581,
											"end": 4582,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4589,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6412,
											"end": 6634,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6412,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6486,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6486,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6477,
											"end": 6486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6498,
											"end": 6508,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6498,
											"end": 6508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6498,
											"end": 6508,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6628,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6495,
											"end": 6628,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 6560,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6545,
											"end": 6548,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6541,
											"end": 6561,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6538,
											"end": 6539,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6562,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6589,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 6582,
											"end": 6583,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 6590,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6613,
											"end": 6617,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6618,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NAME()": "a3f4df7e",
							"SYMBOL()": "f76f8d78",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blacklist(address)": "f9f92be4",
							"blacklistBatch(address[])": "726b5771",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"isBlacklisted(address)": "fe575a87",
							"maxSupply()": "d5abeb01",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"removeBlacklist(address)": "eb91e651",
							"removeBlacklistBatch(address[])": "ef2af922",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"blacklistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"removeBlacklistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0x3def64eb258d711522995643a810e202cda1869e4a3996883b6256ae0e1469a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://227175d49316f44d4b827305c7ed3b2dbb127e03d3bf30f609429ce926033aef\",\"dweb:/ipfs/QmShfk5cS3VLxJNvUpKtABn2emBVtQqKvmcJ9y2VpQzW6d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 380,
								"contract": "contracts/ERC20.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 386,
								"contract": "contracts/ERC20.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 388,
								"contract": "contracts/ERC20.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 390,
								"contract": "contracts/ERC20.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 392,
								"contract": "contracts/ERC20.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/ERC20.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 267,
								"contract": "contracts/ERC20.sol:MyToken",
								"label": "_paused",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 1026,
								"contract": "contracts/ERC20.sol:MyToken",
								"label": "isBlacklisted",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 999,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								998
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							249
						],
						"IERC20Errors": [
							154
						],
						"IERC721Errors": [
							202
						]
					},
					"id": 250,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 124,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 129,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 134,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 143,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 148,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 153,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 250,
							"src": "278:1764:1",
							"usedErrors": [
								124,
								129,
								134,
								143,
								148,
								153
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 202,
							"linearizedBaseContracts": [
								202
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 160,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 165,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 174,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 179,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 184,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 191,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 196,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 201,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 250,
							"src": "2186:2092:1",
							"usedErrors": [
								160,
								165,
								174,
								179,
								184,
								191,
								196,
								201
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 203,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 249,
							"linearizedBaseContracts": [
								249
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 214,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 219,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 224,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 231,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 236,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 241,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 248,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 250,
							"src": "4424:2107:1",
							"usedErrors": [
								214,
								219,
								224,
								231,
								236,
								241,
								248
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Pausable": [
							357
						]
					},
					"id": 358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 251,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 358,
							"sourceUnit": 999,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 254,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "632:7:2"
									},
									"id": 255,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 253,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 357,
							"linearizedBaseContracts": [
								357,
								998
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 260,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 265,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 267,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 357,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 266,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 271,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 276,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 357,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 279,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 282,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 284,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 287,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 290,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 292,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 298,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 297,
												"id": 299,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 357,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 306,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 357,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 318,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 357,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 330,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 334,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 328,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 327,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 284,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 357,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 346,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 351,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 343,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 292,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 357,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 358,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								260,
								265
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							872
						],
						"IERC20": [
							950
						],
						"IERC20Errors": [
							154
						],
						"IERC20Metadata": [
							976
						]
					},
					"id": 873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 359,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 361,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 873,
							"sourceUnit": 951,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 360,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 950,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 873,
							"sourceUnit": 977,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 362,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 976,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 873,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 364,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 873,
							"sourceUnit": 250,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 366,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 154,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 369,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1428:7:3"
									},
									"id": 370,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 371,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 950,
										"src": "1437:6:3"
									},
									"id": 372,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 373,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "1445:14:3"
									},
									"id": 374,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 375,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "1461:12:3"
									},
									"id": 376,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 368,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 872,
							"linearizedBaseContracts": [
								872,
								154,
								976,
								950,
								998
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 872,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 379,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 377,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 378,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 386,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 872,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 385,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 381,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 384,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 382,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 383,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 388,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 872,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 387,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 390,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 872,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 389,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 392,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 872,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 391,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 400,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 401,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 404,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 405,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 409,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 394,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 872,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										963
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 415,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 390,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 414,
												"id": 416,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 412,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 872,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										969
									],
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 424,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 392,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 423,
												"id": 425,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 872,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										975
									],
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 432,
												"id": 434,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 430,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 872,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 441,
												"id": 443,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 872,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										907
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 453,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 455,
													"indexExpression": {
														"id": 454,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 448,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 452,
												"id": 456,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 872,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										917
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 468,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 470,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 467,
												"id": 480,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 872,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										927
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 492,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 494,
														"indexExpression": {
															"id": 493,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 496,
													"indexExpression": {
														"id": 495,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 497,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 872,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										937
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													510
												],
												"declarations": [
													{
														"constant": false,
														"id": 510,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 522,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 509,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 511,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															763,
															823
														],
														"referencedDeclaration": 763,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 508,
												"id": 521,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 872,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										949
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 554,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 535,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 541,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 548,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 534,
												"id": 553,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 872,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 581,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 587,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 586,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 592,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 595,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 872,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 612,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 613,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																624
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 624,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 649,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 623,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 628,
															"initialValue": {
																"baseExpression": {
																	"id": 625,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 627,
																"indexExpression": {
																	"id": 626,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 629,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 630,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 639,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 638,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 633,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 634,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 624,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 635,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 632,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 124,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 637,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 648,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 640,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 380,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 642,
																			"indexExpression": {
																				"id": 641,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 643,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 624,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 644,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 609,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 647,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 650,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 622,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 618,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 619,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 621,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 651,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 652,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 380,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 666,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 657,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 673,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 872,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 688,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 694,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 693,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 699,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 703,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 702,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 872,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 720,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 721,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 734,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 733,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 727,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 726,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 732,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 737,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 735,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 872,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 756,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 755,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															763,
															823
														],
														"referencedDeclaration": 823,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 872,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 790,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 791,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 804,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 803,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 797,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 796,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 802,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 805,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 808,
															"indexExpression": {
																"id": 806,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 809,
														"indexExpression": {
															"id": 807,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 810,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 813,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 772,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 815,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 816,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 814,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 819,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 872,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													834
												],
												"declarations": [
													{
														"constant": false,
														"id": 834,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 870,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 833,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 839,
												"initialValue": {
													"arguments": [
														{
															"id": 836,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 835,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 842,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 841,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 847,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 848,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 857,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 856,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 851,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 828,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 852,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 834,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 853,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 850,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 143,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 855,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 867,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 859,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 826,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 860,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 861,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 834,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 862,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 858,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				763,
																				823
																			],
																			"referencedDeclaration": 823,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 866,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 872,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 873,
							"src": "1401:9741:3",
							"usedErrors": [
								124,
								129,
								134,
								143,
								148,
								153
							],
							"usedEvents": [
								884,
								893
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							950
						]
					},
					"id": 951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 875,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 950,
							"linearizedBaseContracts": [
								950
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 884,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 893,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 950,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 950,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 914,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 950,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 950,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 950,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 950,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 951,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								884,
								893
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							950
						],
						"IERC20Metadata": [
							976
						]
					},
					"id": 977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 954,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 977,
							"sourceUnit": 951,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 953,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 950,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 956,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 950,
										"src": "305:6:5"
									},
									"id": 957,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 955,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 976,
							"linearizedBaseContracts": [
								976,
								950
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 963,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 960,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 976,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 966,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 976,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 972,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 976,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 977,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								884,
								893
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 979,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 984,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 983,
												"id": 986,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 998,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 993,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 992,
												"id": 995,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 990,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 998,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "608:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							872
						],
						"IERC20": [
							950
						],
						"IERC20Errors": [
							154
						],
						"IERC20Metadata": [
							976
						],
						"MyToken": [
							1285
						],
						"Ownable": [
							112
						],
						"Pausable": [
							357
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "35:21:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 873,
							"src": "60:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 113,
							"src": "117:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 358,
							"src": "171:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1004,
										"name": "ERC20",
										"nameLocations": [
											"250:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 872,
										"src": "250:5:7"
									},
									"id": 1005,
									"nodeType": "InheritanceSpecifier",
									"src": "250:5:7"
								},
								{
									"baseName": {
										"id": 1006,
										"name": "Ownable",
										"nameLocations": [
											"257:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "257:7:7"
									},
									"id": 1007,
									"nodeType": "InheritanceSpecifier",
									"src": "257:7:7"
								},
								{
									"baseName": {
										"id": 1008,
										"name": "Pausable",
										"nameLocations": [
											"266:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 357,
										"src": "266:8:7"
									},
									"id": 1009,
									"nodeType": "InheritanceSpecifier",
									"src": "266:8:7"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285,
								357,
								112,
								872,
								154,
								976,
								950,
								998
							],
							"name": "MyToken",
							"nameLocation": "239:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5abeb01",
									"id": 1016,
									"mutability": "constant",
									"name": "maxSupply",
									"nameLocation": "306:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "282:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1010,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "282:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2000000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000000"
										},
										"id": 1015,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32303030303030303030",
											"id": 1011,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "318:10:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2000000000_by_1",
												"typeString": "int_const 2000000000"
											},
											"value": "2000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1014,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1012,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "331:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1013,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "335:2:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "331:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "318:19:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2000000000000000000000000000_by_1",
											"typeString": "int_const 2000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a3f4df7e",
									"id": 1019,
									"mutability": "constant",
									"name": "NAME",
									"nameLocation": "367:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "344:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1017,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "344:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d454d45",
										"id": 1018,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "374:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
											"typeString": "literal_string \"MEME\""
										},
										"value": "MEME"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f76f8d78",
									"id": 1022,
									"mutability": "constant",
									"name": "SYMBOL",
									"nameLocation": "410:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "387:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1020,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "387:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4d454d45",
										"id": 1021,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "419:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
											"typeString": "literal_string \"MEME\""
										},
										"value": "MEME"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fe575a87",
									"id": 1026,
									"mutability": "mutable",
									"name": "isBlacklisted",
									"nameLocation": "466:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "434:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1025,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1023,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "442:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "434:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1024,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "453:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "532:93:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1036,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "549:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "553:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "549:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030303030",
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "561:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "574:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "578:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "574:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "561:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000000"
															}
														],
														"id": 1035,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "543:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "543:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "543:38:7"
											}
										]
									},
									"id": 1046,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1029,
													"name": "NAME",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "508:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1030,
													"name": "SYMBOL",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1022,
													"src": "514:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1031,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1028,
												"name": "ERC20",
												"nameLocations": [
													"502:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 872,
												"src": "502:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "502:19:7"
										},
										{
											"arguments": [],
											"id": 1033,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1032,
												"name": "Ownable",
												"nameLocations": [
													"522:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 112,
												"src": "522:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "522:9:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "532:0:7"
									},
									"scope": 1285,
									"src": "488:137:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "687:46:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1052,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "704:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "704:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "718:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1051,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "698:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "698:27:7"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "659:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "672:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "664:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:16:7"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:7"
									},
									"scope": 1285,
									"src": "650:83:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "843:167:7",
										"statements": [
											{
												"id": 1077,
												"nodeType": "UncheckedBlock",
												"src": "854:116:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1068,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "887:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "887:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1070,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1062,
																			"src": "903:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "887:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1072,
																		"name": "maxSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "913:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "887:35:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d696e74696e6720776f756c6420657863656564206d617820737570706c79",
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "924:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_787cfce62952f8e769386983f80bd129e75108362ed0e852155d2ee244277933",
																		"typeString": "literal_string \"Minting would exceed max supply\""
																	},
																	"value": "Minting would exceed max supply"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_787cfce62952f8e769386983f80bd129e75108362ed0e852155d2ee244277933",
																		"typeString": "literal_string \"Minting would exceed max supply\""
																	}
																],
																"id": 1067,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "879:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "879:79:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1076,
														"nodeType": "ExpressionStatement",
														"src": "879:79:7"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "986:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "995:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "980:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "980:22:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1065,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1064,
												"name": "onlyOwner",
												"nameLocations": [
													"833:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "833:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "833:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "788:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "801:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "793:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "818:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "810:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:33:7"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:0:7"
									},
									"scope": 1285,
									"src": "779:231:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "1098:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1089,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1109:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1109:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "1109:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1087,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1086,
												"name": "onlyOwner",
												"nameLocations": [
													"1088:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1088:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1088:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "1073:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1078:2:7"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1098:0:7"
									},
									"scope": 1285,
									"src": "1064:61:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "1169:29:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1098,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1180:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "1180:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1096,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1095,
												"name": "onlyOwner",
												"nameLocations": [
													"1159:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1159:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1159:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "1142:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:7"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1169:0:7"
									},
									"scope": 1285,
									"src": "1133:65:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "1336:103:7",
										"statements": [
											{
												"condition": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1351:23:7",
													"subExpression": {
														"baseExpression": {
															"id": 1109,
															"name": "isBlacklisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1352:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"id": 1110,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "1366:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1352:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"nodeType": "IfStatement",
												"src": "1347:85:7",
												"trueBody": {
													"id": 1119,
													"nodeType": "Block",
													"src": "1376:56:7",
													"statements": [
														{
															"expression": {
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1113,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "1391:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1115,
																	"indexExpression": {
																		"id": 1114,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "1405:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1391:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1416:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1391:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1118,
															"nodeType": "ExpressionStatement",
															"src": "1391:29:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f9f92be4",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1106,
												"name": "onlyOwner",
												"nameLocations": [
													"1326:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1326:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1326:9:7"
										}
									],
									"name": "blacklist",
									"nameLocation": "1292:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1310:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "1302:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1302:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:17:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1336:0:7"
									},
									"scope": 1285,
									"src": "1283:156:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "1506:103:7",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 1129,
														"name": "isBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "1521:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1131,
													"indexExpression": {
														"id": 1130,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "1535:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1521:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1139,
												"nodeType": "IfStatement",
												"src": "1517:85:7",
												"trueBody": {
													"id": 1138,
													"nodeType": "Block",
													"src": "1545:57:7",
													"statements": [
														{
															"expression": {
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1132,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "1560:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1134,
																	"indexExpression": {
																		"id": 1133,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "1574:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1560:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1585:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1560:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1137,
															"nodeType": "ExpressionStatement",
															"src": "1560:30:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "eb91e651",
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1127,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1126,
												"name": "onlyOwner",
												"nameLocations": [
													"1496:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1496:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1496:9:7"
										}
									],
									"name": "removeBlacklist",
									"nameLocation": "1456:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1480:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "1472:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:17:7"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:7"
									},
									"scope": 1285,
									"src": "1447:162:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "1733:191:7",
										"statements": [
											{
												"body": {
													"id": 1176,
													"nodeType": "Block",
													"src": "1790:127:7",
													"statements": [
														{
															"condition": {
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1809:27:7",
																"subExpression": {
																	"baseExpression": {
																		"id": 1160,
																		"name": "isBlacklisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "1810:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1164,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1161,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1144,
																			"src": "1824:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1163,
																		"indexExpression": {
																			"id": 1162,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "1833:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1824:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1810:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1175,
															"nodeType": "IfStatement",
															"src": "1805:101:7",
															"trueBody": {
																"id": 1174,
																"nodeType": "Block",
																"src": "1838:68:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1166,
																					"name": "isBlacklisted",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "1857:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1170,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1167,
																						"name": "accounts",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1144,
																						"src": "1871:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 1169,
																					"indexExpression": {
																						"id": 1168,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1150,
																						"src": "1880:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1871:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1857:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1886:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "1857:33:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1173,
																		"nodeType": "ExpressionStatement",
																		"src": "1857:33:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1153,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "1764:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1154,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "1768:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1777:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1768:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1764:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"initializationExpression": {
													"assignments": [
														1150
													],
													"declarations": [
														{
															"constant": false,
															"id": 1150,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1757:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1177,
															"src": "1749:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1149,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1749:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1152,
													"initialValue": {
														"hexValue": "30",
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1761:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1749:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1785:3:7",
														"subExpression": {
															"id": 1157,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "1785:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1159,
													"nodeType": "ExpressionStatement",
													"src": "1785:3:7"
												},
												"nodeType": "ForStatement",
												"src": "1744:173:7"
											}
										]
									},
									"functionSelector": "726b5771",
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1146,
												"name": "onlyOwner",
												"nameLocations": [
													"1723:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1723:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1723:9:7"
										}
									],
									"name": "blacklistBatch",
									"nameLocation": "1672:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "1706:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1687:27:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1142,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1687:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1143,
													"nodeType": "ArrayTypeName",
													"src": "1687:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1686:29:7"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1733:0:7"
									},
									"scope": 1285,
									"src": "1663:261:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "2008:191:7",
										"statements": [
											{
												"body": {
													"id": 1213,
													"nodeType": "Block",
													"src": "2065:127:7",
													"statements": [
														{
															"condition": {
																"baseExpression": {
																	"id": 1198,
																	"name": "isBlacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "2084:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1202,
																"indexExpression": {
																	"baseExpression": {
																		"id": 1199,
																		"name": "accounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "2098:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 1201,
																	"indexExpression": {
																		"id": 1200,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1188,
																		"src": "2107:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2098:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2084:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1212,
															"nodeType": "IfStatement",
															"src": "2080:101:7",
															"trueBody": {
																"id": 1211,
																"nodeType": "Block",
																"src": "2112:69:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1203,
																					"name": "isBlacklisted",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "2131:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1207,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1204,
																						"name": "accounts",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1182,
																						"src": "2145:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																							"typeString": "address[] calldata"
																						}
																					},
																					"id": 1206,
																					"indexExpression": {
																						"id": 1205,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1188,
																						"src": "2154:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2145:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2131:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 1208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2160:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "2131:34:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1210,
																		"nodeType": "ExpressionStatement",
																		"src": "2131:34:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1191,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "2039:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1192,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "2043:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2052:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2043:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2039:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"initializationExpression": {
													"assignments": [
														1188
													],
													"declarations": [
														{
															"constant": false,
															"id": 1188,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2032:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1214,
															"src": "2024:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1187,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2024:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1190,
													"initialValue": {
														"hexValue": "30",
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2036:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2024:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2060:3:7",
														"subExpression": {
															"id": 1195,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "2060:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1197,
													"nodeType": "ExpressionStatement",
													"src": "2060:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2019:173:7"
											}
										]
									},
									"functionSelector": "ef2af922",
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1184,
												"name": "onlyOwner",
												"nameLocations": [
													"1998:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1998:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1998:9:7"
										}
									],
									"name": "removeBlacklistBatch",
									"nameLocation": "1941:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "1981:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1962:27:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1962:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "1962:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1961:29:7"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2008:0:7"
									},
									"scope": 1285,
									"src": "1932:267:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "2475:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1237,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2508:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "2512:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1235,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2493:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyToken_$1285_$",
																"typeString": "type(contract super MyToken)"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2499:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "2493:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1234,
												"id": 1240,
												"nodeType": "Return",
												"src": "2486:33:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1224,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2383:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2387:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2383:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1223,
												"name": "notBlacklisted",
												"nameLocations": [
													"2368:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1284,
												"src": "2368:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2368:26:7"
										},
										{
											"arguments": [
												{
													"id": 1228,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1218,
													"src": "2419:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1227,
												"name": "notBlacklisted",
												"nameLocations": [
													"2404:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1284,
												"src": "2404:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2404:18:7"
										},
										{
											"id": 1231,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1230,
												"name": "whenNotPaused",
												"nameLocations": [
													"2432:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 284,
												"src": "2432:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2432:13:7"
										}
									],
									"name": "transfer",
									"nameLocation": "2288:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1222,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2350:8:7"
									},
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2305:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2297:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2317:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2309:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:28:7"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2464:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2464:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:6:7"
									},
									"scope": 1285,
									"src": "2279:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										555
									],
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "2743:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1264,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2780:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1265,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2786:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "2790:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1262,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2761:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MyToken_$1285_$",
																"typeString": "type(contract super MyToken)"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2767:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 555,
														"src": "2761:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2761:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1268,
												"nodeType": "Return",
												"src": "2754:43:7"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1252,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1244,
													"src": "2657:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1253,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1251,
												"name": "notBlacklisted",
												"nameLocations": [
													"2642:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1284,
												"src": "2642:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2642:20:7"
										},
										{
											"arguments": [
												{
													"id": 1255,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1246,
													"src": "2687:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1254,
												"name": "notBlacklisted",
												"nameLocations": [
													"2672:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1284,
												"src": "2672:14:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2672:18:7"
										},
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "whenNotPaused",
												"nameLocations": [
													"2700:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 284,
												"src": "2700:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2700:13:7"
										}
									],
									"name": "transferFrom",
									"nameLocation": "2544:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1250,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2624:8:7"
									},
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2565:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2557:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2579:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2571:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2591:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2583:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2556:42:7"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "2732:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2732:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:6:7"
									},
									"scope": 1285,
									"src": "2535:270:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "2854:89:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2873:23:7",
															"subExpression": {
																"baseExpression": {
																	"id": 1275,
																	"name": "isBlacklisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "2874:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1277,
																"indexExpression": {
																	"id": 1276,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "2888:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2874:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320626c61636b6c6973746564",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															},
															"value": "Address is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															}
														],
														"id": 1274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2865:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "2865:58:7"
											},
											{
												"id": 1282,
												"nodeType": "PlaceholderStatement",
												"src": "2934:1:7"
											}
										]
									},
									"id": 1284,
									"name": "notBlacklisted",
									"nameLocation": "2822:14:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2845:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "2837:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2837:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2836:17:7"
									},
									"src": "2813:130:7",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1286,
							"src": "230:2716:7",
							"usedErrors": [
								124,
								129,
								134,
								143,
								148,
								153
							],
							"usedEvents": [
								13,
								260,
								265,
								884,
								893
							]
						}
					],
					"src": "35:2913:7"
				},
				"id": 7
			}
		}
	}
}